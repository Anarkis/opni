// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	rag√π          v0.2.3
// source: plugins/slo/pkg/apis/slo/slo.proto

package slo

import (
	v1 "github.com/rancher/opni/pkg/apis/core/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Evaluation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate   float64 `protobuf:"fixed64,1,opt,name=rate,proto3" json:"rate,omitempty"`
	Period float64 `protobuf:"fixed64,2,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *Evaluation) Reset() {
	*x = Evaluation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Evaluation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evaluation) ProtoMessage() {}

func (x *Evaluation) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evaluation.ProtoReflect.Descriptor instead.
func (*Evaluation) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{0}
}

func (x *Evaluation) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *Evaluation) GetPeriod() float64 {
	if x != nil {
		return x.Period
	}
	return 0
}

type ServiceLevelObjective struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ClusterId string    `protobuf:"bytes,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	ServiceId string    `protobuf:"bytes,4,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	FormulaId string    `protobuf:"bytes,5,opt,name=formulaId,proto3" json:"formulaId,omitempty"`
	Targets   []*Target `protobuf:"bytes,6,rep,name=targets,proto3" json:"targets,omitempty"`
}

func (x *ServiceLevelObjective) Reset() {
	*x = ServiceLevelObjective{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceLevelObjective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceLevelObjective) ProtoMessage() {}

func (x *ServiceLevelObjective) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceLevelObjective.ProtoReflect.Descriptor instead.
func (*ServiceLevelObjective) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceLevelObjective) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceLevelObjective) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceLevelObjective) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ServiceLevelObjective) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceLevelObjective) GetFormulaId() string {
	if x != nil {
		return x.FormulaId
	}
	return ""
}

func (x *ServiceLevelObjective) GetTargets() []*Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueX100  uint64               `protobuf:"varint,1,opt,name=ValueX100,proto3" json:"ValueX100,omitempty"`
	TimeWindow *durationpb.Duration `protobuf:"bytes,2,opt,name=timeWindow,proto3" json:"timeWindow,omitempty"`
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{2}
}

func (x *Target) GetValueX100() uint64 {
	if x != nil {
		return x.ValueX100
	}
	return 0
}

func (x *Target) GetTimeWindow() *durationpb.Duration {
	if x != nil {
		return x.TimeWindow
	}
	return nil
}

type SLOStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slo       *v1.Reference `protobuf:"bytes,1,opt,name=slo,proto3" json:"slo,omitempty"`
	Timestamp int64         `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Status    *Evaluation   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Budget    *Evaluation   `protobuf:"bytes,4,opt,name=budget,proto3" json:"budget,omitempty"`
}

func (x *SLOStatus) Reset() {
	*x = SLOStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLOStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLOStatus) ProtoMessage() {}

func (x *SLOStatus) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLOStatus.ProtoReflect.Descriptor instead.
func (*SLOStatus) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{3}
}

func (x *SLOStatus) GetSlo() *v1.Reference {
	if x != nil {
		return x.Slo
	}
	return nil
}

func (x *SLOStatus) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SLOStatus) GetStatus() *Evaluation {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SLOStatus) GetBudget() *Evaluation {
	if x != nil {
		return x.Budget
	}
	return nil
}

type ServiceLevelObjectiveList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ServiceLevelObjective `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ServiceLevelObjectiveList) Reset() {
	*x = ServiceLevelObjectiveList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceLevelObjectiveList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceLevelObjectiveList) ProtoMessage() {}

func (x *ServiceLevelObjectiveList) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceLevelObjectiveList.ProtoReflect.Descriptor instead.
func (*ServiceLevelObjectiveList) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceLevelObjectiveList) GetItems() []*ServiceLevelObjective {
	if x != nil {
		return x.Items
	}
	return nil
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ClusterId   string `protobuf:"bytes,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{5}
}

func (x *Service) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *Service) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ServiceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Service `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ServiceList) Reset() {
	*x = ServiceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceList) ProtoMessage() {}

func (x *ServiceList) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceList.ProtoReflect.Descriptor instead.
func (*ServiceList) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{6}
}

func (x *ServiceList) GetItems() []*Service {
	if x != nil {
		return x.Items
	}
	return nil
}

type Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Metric) Reset() {
	*x = Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{7}
}

func (x *Metric) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Metric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MetricList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Metric `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MetricList) Reset() {
	*x = MetricList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricList) ProtoMessage() {}

func (x *MetricList) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricList.ProtoReflect.Descriptor instead.
func (*MetricList) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{8}
}

func (x *MetricList) GetItems() []*Metric {
	if x != nil {
		return x.Items
	}
	return nil
}

type Formula struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Formula) Reset() {
	*x = Formula{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Formula) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Formula) ProtoMessage() {}

func (x *Formula) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Formula.ProtoReflect.Descriptor instead.
func (*Formula) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{9}
}

func (x *Formula) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Formula) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Formula) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type FormulaList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Formula `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *FormulaList) Reset() {
	*x = FormulaList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormulaList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormulaList) ProtoMessage() {}

func (x *FormulaList) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormulaList.ProtoReflect.Descriptor instead.
func (*FormulaList) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{10}
}

func (x *FormulaList) GetItems() []*Formula {
	if x != nil {
		return x.Items
	}
	return nil
}

type CloneServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service      *v1.Reference `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	NewClusterId string        `protobuf:"bytes,2,opt,name=newClusterId,proto3" json:"newClusterId,omitempty"`
	NewServiceId string        `protobuf:"bytes,3,opt,name=newServiceId,proto3" json:"newServiceId,omitempty"`
}

func (x *CloneServiceRequest) Reset() {
	*x = CloneServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneServiceRequest) ProtoMessage() {}

func (x *CloneServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneServiceRequest.ProtoReflect.Descriptor instead.
func (*CloneServiceRequest) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{11}
}

func (x *CloneServiceRequest) GetService() *v1.Reference {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *CloneServiceRequest) GetNewClusterId() string {
	if x != nil {
		return x.NewClusterId
	}
	return ""
}

func (x *CloneServiceRequest) GetNewServiceId() string {
	if x != nil {
		return x.NewServiceId
	}
	return ""
}

type SetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slo   *v1.Reference `protobuf:"bytes,1,opt,name=slo,proto3" json:"slo,omitempty"`
	State *State        `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *SetStateRequest) Reset() {
	*x = SetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateRequest) ProtoMessage() {}

func (x *SetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateRequest.ProtoReflect.Descriptor instead.
func (*SetStateRequest) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{12}
}

func (x *SetStateRequest) GetSlo() *v1.Reference {
	if x != nil {
		return x.Slo
	}
	return nil
}

func (x *SetStateRequest) GetState() *State {
	if x != nil {
		return x.State
	}
	return nil
}

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{13}
}

func (x *State) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_plugins_slo_pkg_apis_slo_slo_proto protoreflect.FileDescriptor

var file_plugins_slo_pkg_apis_slo_slo_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x73, 0x6c, 0x6f, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x73, 0x6c, 0x6f, 0x2f, 0x73, 0x6c, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x73, 0x6c, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x0a, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x42, 0x00, 0x12, 0x10, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x42, 0x00, 0x3a, 0x00, 0x22, 0x96, 0x01, 0x0a, 0x15, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x0c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x00, 0x12, 0x0e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x00, 0x12, 0x13, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x00, 0x12, 0x13, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x00, 0x12, 0x13, 0x0a, 0x09,
	0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x00, 0x12, 0x1e, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42,
	0x00, 0x3a, 0x00, 0x22, 0x50, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x13, 0x0a,
	0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x58, 0x31, 0x30, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x00, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x00, 0x3a, 0x00, 0x22, 0x88, 0x01, 0x0a, 0x09, 0x53, 0x4c, 0x4f, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x03, 0x73, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x00, 0x12, 0x13, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x00, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x00, 0x12, 0x21, 0x0a, 0x06, 0x62,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6c,
	0x6f, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x00, 0x3a, 0x00,
	0x22, 0x4a, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73,
	0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x00, 0x3a, 0x00, 0x22, 0x55, 0x0a, 0x07,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x00, 0x12, 0x0e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x00, 0x12, 0x13, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x00, 0x12, 0x15, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x00, 0x3a, 0x00, 0x22, 0x2e, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42,
	0x00, 0x3a, 0x00, 0x22, 0x28, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x0c, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x00, 0x12, 0x0e, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x00, 0x3a, 0x00, 0x22, 0x2c, 0x0a,
	0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x6c, 0x6f,
	0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x42, 0x00, 0x3a, 0x00, 0x22, 0x40, 0x0a, 0x07, 0x46,
	0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x12, 0x0c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x00, 0x12, 0x0e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x00, 0x12, 0x15, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x00, 0x3a, 0x00, 0x22, 0x2e, 0x0a,
	0x0b, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x6c,
	0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x42, 0x00, 0x3a, 0x00, 0x22, 0x6b, 0x0a,
	0x13, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x00, 0x12, 0x16, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x00,
	0x12, 0x16, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x00, 0x3a, 0x00, 0x22, 0x50, 0x0a, 0x0f, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x03, 0x73, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x00, 0x12, 0x1b, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73,
	0x6c, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x00, 0x3a, 0x00, 0x22, 0x19, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x00, 0x3a, 0x00, 0x32, 0x9e, 0x0f, 0x0a, 0x03, 0x53, 0x4c, 0x4f, 0x12,
	0x86, 0x01, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x4c, 0x4f, 0x12, 0x1a, 0x2e,
	0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x3a, 0x01, 0x2a, 0x22, 0x05, 0x2f, 0x73,
	0x6c, 0x6f, 0x73, 0xba, 0x3e, 0x2e, 0x12, 0x13, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x10, 0x01, 0x42, 0x17, 0x7b, 0x70, 0x6f,
	0x73, 0x74, 0x3a, 0x22, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x22, 0x0a, 0x62, 0x6f, 0x64, 0x79, 0x3a,
	0x22, 0x2a, 0x22, 0x7d, 0x28, 0x00, 0x30, 0x00, 0x12, 0x79, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x53,
	0x4c, 0x4f, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x1a, 0x1a, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22,
	0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0xba, 0x3e, 0x29, 0x12, 0x13, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x10, 0x01, 0x42, 0x12, 0x7b, 0x67, 0x65,
	0x74, 0x3a, 0x22, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x22, 0x7d, 0x28,
	0x00, 0x30, 0x00, 0x12, 0x7c, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x4c, 0x4f, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x07, 0x12,
	0x05, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0xba, 0x3e, 0x24, 0x12, 0x13, 0x0a, 0x0f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x10, 0x01, 0x42, 0x0d,
	0x7b, 0x67, 0x65, 0x74, 0x3a, 0x22, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x22, 0x7d, 0x28, 0x00, 0x30,
	0x00, 0x12, 0x8f, 0x01, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x4c, 0x4f, 0x12,
	0x1a, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x1a, 0x0a,
	0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xba, 0x3e, 0x32, 0x12, 0x13, 0x0a,
	0x0f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70,
	0x10, 0x01, 0x42, 0x1b, 0x7b, 0x70, 0x75, 0x74, 0x3a, 0x22, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x22, 0x0a, 0x62, 0x6f, 0x64, 0x79, 0x3a, 0x22, 0x2a, 0x22, 0x7d, 0x28,
	0x00, 0x30, 0x00, 0x12, 0x7b, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x4c, 0x4f,
	0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0c, 0x2a, 0x0a, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xba, 0x3e, 0x2c,
	0x12, 0x13, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68,
	0x74, 0x74, 0x70, 0x10, 0x01, 0x42, 0x15, 0x7b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x22,
	0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x22, 0x7d, 0x28, 0x00, 0x30, 0x00,
	0x12, 0x88, 0x01, 0x0a, 0x08, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x53, 0x4c, 0x4f, 0x12, 0x0f, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x1a,
	0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x4b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x22, 0x10, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x63,
	0x6c, 0x6f, 0x6e, 0x65, 0xba, 0x3e, 0x30, 0x12, 0x13, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x10, 0x01, 0x42, 0x19, 0x7b, 0x70,
	0x6f, 0x73, 0x74, 0x3a, 0x22, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x22, 0x7d, 0x28, 0x00, 0x30, 0x00, 0x12, 0x7b, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x0e, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x4c, 0x4f,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11,
	0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0xba, 0x3e, 0x30, 0x12, 0x13, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x10, 0x01, 0x42, 0x19, 0x7b, 0x67, 0x65, 0x74, 0x3a,
	0x22, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x7d, 0x28, 0x00, 0x30, 0x00, 0x12, 0x77, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x0c, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xba, 0x3e, 0x2d,
	0x12, 0x13, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68,
	0x74, 0x74, 0x70, 0x10, 0x01, 0x42, 0x16, 0x7b, 0x67, 0x65, 0x74, 0x3a, 0x22, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x22, 0x7d, 0x28, 0x00, 0x30,
	0x00, 0x12, 0x7a, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x73, 0x6c, 0x6f, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0xba, 0x3e,
	0x28, 0x12, 0x13, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x68, 0x74, 0x74, 0x70, 0x10, 0x01, 0x42, 0x11, 0x7b, 0x67, 0x65, 0x74, 0x3a, 0x22, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x7d, 0x28, 0x00, 0x30, 0x00, 0x12, 0xb5, 0x01,
	0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18,
	0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x6f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0xba, 0x3e, 0x45, 0x12, 0x13, 0x0a, 0x0f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x10,
	0x01, 0x42, 0x2e, 0x7b, 0x70, 0x6f, 0x73, 0x74, 0x3a, 0x22, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x64, 0x7d,
	0x2f, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x22, 0x0a, 0x62, 0x6f, 0x64, 0x79, 0x3a, 0x22, 0x2a, 0x22,
	0x7d, 0x28, 0x00, 0x30, 0x00, 0x12, 0x73, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x1a, 0x0b, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x22, 0x44, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xba, 0x3e, 0x2c, 0x12, 0x13, 0x0a, 0x0f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x10, 0x01, 0x42,
	0x15, 0x7b, 0x67, 0x65, 0x74, 0x3a, 0x22, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x22, 0x7d, 0x28, 0x00, 0x30, 0x00, 0x12, 0x76, 0x0a, 0x0b, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x0f, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0xba, 0x3e, 0x27, 0x12, 0x13, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x10, 0x01, 0x42, 0x10, 0x7b, 0x67,
	0x65, 0x74, 0x3a, 0x22, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x7d, 0x28, 0x00,
	0x30, 0x00, 0x12, 0x77, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61,
	0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x1a, 0x0c, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x22,
	0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c,
	0x61, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xba, 0x3e, 0x2d, 0x12, 0x13, 0x0a, 0x0f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x10, 0x01, 0x42,
	0x16, 0x7b, 0x67, 0x65, 0x74, 0x3a, 0x22, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x22, 0x7d, 0x28, 0x00, 0x30, 0x00, 0x12, 0x7a, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f,
	0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73, 0xba, 0x3e, 0x28, 0x12, 0x13, 0x0a, 0x0f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x10, 0x01,
	0x42, 0x11, 0x7b, 0x67, 0x65, 0x74, 0x3a, 0x22, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61,
	0x73, 0x22, 0x7d, 0x28, 0x00, 0x30, 0x00, 0x12, 0x3e, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x28, 0x00, 0x30, 0x00, 0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x1a, 0x0a, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x00, 0x28, 0x00, 0x30, 0x00, 0x1a, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f,
	0x70, 0x6e, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f,
	0x73, 0x6c, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x73, 0x6c, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugins_slo_pkg_apis_slo_slo_proto_rawDescOnce sync.Once
	file_plugins_slo_pkg_apis_slo_slo_proto_rawDescData = file_plugins_slo_pkg_apis_slo_slo_proto_rawDesc
)

func file_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP() []byte {
	file_plugins_slo_pkg_apis_slo_slo_proto_rawDescOnce.Do(func() {
		file_plugins_slo_pkg_apis_slo_slo_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugins_slo_pkg_apis_slo_slo_proto_rawDescData)
	})
	return file_plugins_slo_pkg_apis_slo_slo_proto_rawDescData
}

var file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_plugins_slo_pkg_apis_slo_slo_proto_goTypes = []interface{}{
	(*Evaluation)(nil),                // 0: slo.Evaluation
	(*ServiceLevelObjective)(nil),     // 1: slo.ServiceLevelObjective
	(*Target)(nil),                    // 2: slo.Target
	(*SLOStatus)(nil),                 // 3: slo.SLOStatus
	(*ServiceLevelObjectiveList)(nil), // 4: slo.ServiceLevelObjectiveList
	(*Service)(nil),                   // 5: slo.Service
	(*ServiceList)(nil),               // 6: slo.ServiceList
	(*Metric)(nil),                    // 7: slo.Metric
	(*MetricList)(nil),                // 8: slo.MetricList
	(*Formula)(nil),                   // 9: slo.Formula
	(*FormulaList)(nil),               // 10: slo.FormulaList
	(*CloneServiceRequest)(nil),       // 11: slo.CloneServiceRequest
	(*SetStateRequest)(nil),           // 12: slo.SetStateRequest
	(*State)(nil),                     // 13: slo.State
	(*durationpb.Duration)(nil),       // 14: google.protobuf.Duration
	(*v1.Reference)(nil),              // 15: core.Reference
	(*emptypb.Empty)(nil),             // 16: google.protobuf.Empty
}
var file_plugins_slo_pkg_apis_slo_slo_proto_depIdxs = []int32{
	2,  // 0: slo.ServiceLevelObjective.targets:type_name -> slo.Target
	14, // 1: slo.Target.timeWindow:type_name -> google.protobuf.Duration
	15, // 2: slo.SLOStatus.slo:type_name -> core.Reference
	0,  // 3: slo.SLOStatus.status:type_name -> slo.Evaluation
	0,  // 4: slo.SLOStatus.budget:type_name -> slo.Evaluation
	1,  // 5: slo.ServiceLevelObjectiveList.items:type_name -> slo.ServiceLevelObjective
	5,  // 6: slo.ServiceList.items:type_name -> slo.Service
	7,  // 7: slo.MetricList.items:type_name -> slo.Metric
	9,  // 8: slo.FormulaList.items:type_name -> slo.Formula
	15, // 9: slo.CloneServiceRequest.service:type_name -> core.Reference
	15, // 10: slo.SetStateRequest.slo:type_name -> core.Reference
	13, // 11: slo.SetStateRequest.state:type_name -> slo.State
	1,  // 12: slo.SLO.CreateSLO:input_type -> slo.ServiceLevelObjective
	15, // 13: slo.SLO.GetSLO:input_type -> core.Reference
	16, // 14: slo.SLO.ListSLOs:input_type -> google.protobuf.Empty
	1,  // 15: slo.SLO.UpdateSLO:input_type -> slo.ServiceLevelObjective
	15, // 16: slo.SLO.DeleteSLO:input_type -> core.Reference
	15, // 17: slo.SLO.CloneSLO:input_type -> core.Reference
	15, // 18: slo.SLO.Status:input_type -> core.Reference
	15, // 19: slo.SLO.GetService:input_type -> core.Reference
	16, // 20: slo.SLO.ListServices:input_type -> google.protobuf.Empty
	11, // 21: slo.SLO.CloneService:input_type -> slo.CloneServiceRequest
	15, // 22: slo.SLO.GetMetric:input_type -> core.Reference
	16, // 23: slo.SLO.ListMetrics:input_type -> google.protobuf.Empty
	15, // 24: slo.SLO.GetFormula:input_type -> core.Reference
	16, // 25: slo.SLO.ListFormulas:input_type -> google.protobuf.Empty
	12, // 26: slo.SLO.SetState:input_type -> slo.SetStateRequest
	15, // 27: slo.SLO.GetState:input_type -> core.Reference
	16, // 28: slo.SLO.CreateSLO:output_type -> google.protobuf.Empty
	1,  // 29: slo.SLO.GetSLO:output_type -> slo.ServiceLevelObjective
	4,  // 30: slo.SLO.ListSLOs:output_type -> slo.ServiceLevelObjectiveList
	16, // 31: slo.SLO.UpdateSLO:output_type -> google.protobuf.Empty
	16, // 32: slo.SLO.DeleteSLO:output_type -> google.protobuf.Empty
	1,  // 33: slo.SLO.CloneSLO:output_type -> slo.ServiceLevelObjective
	3,  // 34: slo.SLO.Status:output_type -> slo.SLOStatus
	5,  // 35: slo.SLO.GetService:output_type -> slo.Service
	6,  // 36: slo.SLO.ListServices:output_type -> slo.ServiceList
	16, // 37: slo.SLO.CloneService:output_type -> google.protobuf.Empty
	7,  // 38: slo.SLO.GetMetric:output_type -> slo.Metric
	8,  // 39: slo.SLO.ListMetrics:output_type -> slo.MetricList
	9,  // 40: slo.SLO.GetFormula:output_type -> slo.Formula
	10, // 41: slo.SLO.ListFormulas:output_type -> slo.FormulaList
	16, // 42: slo.SLO.SetState:output_type -> google.protobuf.Empty
	13, // 43: slo.SLO.GetState:output_type -> slo.State
	28, // [28:44] is the sub-list for method output_type
	12, // [12:28] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_plugins_slo_pkg_apis_slo_slo_proto_init() }
func file_plugins_slo_pkg_apis_slo_slo_proto_init() {
	if File_plugins_slo_pkg_apis_slo_slo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Evaluation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceLevelObjective); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SLOStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceLevelObjectiveList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Formula); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormulaList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugins_slo_pkg_apis_slo_slo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plugins_slo_pkg_apis_slo_slo_proto_goTypes,
		DependencyIndexes: file_plugins_slo_pkg_apis_slo_slo_proto_depIdxs,
		MessageInfos:      file_plugins_slo_pkg_apis_slo_slo_proto_msgTypes,
	}.Build()
	File_plugins_slo_pkg_apis_slo_slo_proto = out.File
	file_plugins_slo_pkg_apis_slo_slo_proto_rawDesc = nil
	file_plugins_slo_pkg_apis_slo_slo_proto_goTypes = nil
	file_plugins_slo_pkg_apis_slo_slo_proto_depIdxs = nil
}

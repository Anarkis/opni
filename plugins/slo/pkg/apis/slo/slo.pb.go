// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v1.0.0
// source: github.com/rancher/opni/pkg/plugins/slo/pkg/apis/slo/slo.proto

package slo

import (
	v1 "github.com/rancher/opni/pkg/apis/core/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SLOStatusState int32

const (
	SLOStatusState_Creating      SLOStatusState = 0
	SLOStatusState_NoData        SLOStatusState = 1
	SLOStatusState_Ok            SLOStatusState = 2
	SLOStatusState_Warning       SLOStatusState = 3
	SLOStatusState_Breaching     SLOStatusState = 4
	SLOStatusState_InternalError SLOStatusState = 5
)

// Enum value maps for SLOStatusState.
var (
	SLOStatusState_name = map[int32]string{
		0: "Creating",
		1: "NoData",
		2: "Ok",
		3: "Warning",
		4: "Breaching",
		5: "InternalError",
	}
	SLOStatusState_value = map[string]int32{
		"Creating":      0,
		"NoData":        1,
		"Ok":            2,
		"Warning":       3,
		"Breaching":     4,
		"InternalError": 5,
	}
)

func (x SLOStatusState) Enum() *SLOStatusState {
	p := new(SLOStatusState)
	*p = x
	return p
}

func (x SLOStatusState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SLOStatusState) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_enumTypes[0].Descriptor()
}

func (SLOStatusState) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_enumTypes[0]
}

func (x SLOStatusState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SLOStatusState.Descriptor instead.
func (SLOStatusState) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{0}
}

type ListEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datasource string `protobuf:"bytes,1,opt,name=datasource,proto3" json:"datasource,omitempty"`
	ServiceId  string `protobuf:"bytes,2,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ClusterId  string `protobuf:"bytes,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	MetricId   string `protobuf:"bytes,4,opt,name=metricId,proto3" json:"metricId,omitempty"`
}

func (x *ListEventsRequest) Reset() {
	*x = ListEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsRequest) ProtoMessage() {}

func (x *ListEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsRequest.ProtoReflect.Descriptor instead.
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{0}
}

func (x *ListEventsRequest) GetDatasource() string {
	if x != nil {
		return x.Datasource
	}
	return ""
}

func (x *ListEventsRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ListEventsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListEventsRequest) GetMetricId() string {
	if x != nil {
		return x.MetricId
	}
	return ""
}

type ListMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datasource string `protobuf:"bytes,1,opt,name=datasource,proto3" json:"datasource,omitempty"`
	ClusterId  string `protobuf:"bytes,2,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	ServiceId  string `protobuf:"bytes,3,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
}

func (x *ListMetricsRequest) Reset() {
	*x = ListMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsRequest) ProtoMessage() {}

func (x *ListMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListMetricsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{1}
}

func (x *ListMetricsRequest) GetDatasource() string {
	if x != nil {
		return x.Datasource
	}
	return ""
}

func (x *ListMetricsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListMetricsRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

type ListServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datasource string `protobuf:"bytes,1,opt,name=datasource,proto3" json:"datasource,omitempty"`
	ClusterId  string `protobuf:"bytes,2,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
}

func (x *ListServicesRequest) Reset() {
	*x = ListServicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesRequest) ProtoMessage() {}

func (x *ListServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesRequest.ProtoReflect.Descriptor instead.
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{2}
}

func (x *ListServicesRequest) GetDatasource() string {
	if x != nil {
		return x.Datasource
	}
	return ""
}

func (x *ListServicesRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Vals []string `protobuf:"bytes,2,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{3}
}

func (x *Event) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Event) GetVals() []string {
	if x != nil {
		return x.Vals
	}
	return nil
}

type EventList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Event `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *EventList) Reset() {
	*x = EventList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventList) ProtoMessage() {}

func (x *EventList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventList.ProtoReflect.Descriptor instead.
func (*EventList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{4}
}

func (x *EventList) GetItems() []*Event {
	if x != nil {
		return x.Items
	}
	return nil
}

type ServiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId         string `protobuf:"bytes,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
	ClusterId     string `protobuf:"bytes,5,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	MetricName    string `protobuf:"bytes,2,opt,name=metricName,proto3" json:"metricName,omitempty"`
	MetricIdGood  string `protobuf:"bytes,3,opt,name=metricIdGood,proto3" json:"metricIdGood,omitempty"`
	MetricIdTotal string `protobuf:"bytes,4,opt,name=metricIdTotal,proto3" json:"metricIdTotal,omitempty"`
}

func (x *ServiceInfo) Reset() {
	*x = ServiceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfo) ProtoMessage() {}

func (x *ServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInfo.ProtoReflect.Descriptor instead.
func (*ServiceInfo) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{5}
}

func (x *ServiceInfo) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ServiceInfo) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ServiceInfo) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *ServiceInfo) GetMetricIdGood() string {
	if x != nil {
		return x.MetricIdGood
	}
	return ""
}

func (x *ServiceInfo) GetMetricIdTotal() string {
	if x != nil {
		return x.MetricIdTotal
	}
	return ""
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string `protobuf:"bytes,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ClusterId string `protobuf:"bytes,2,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{6}
}

func (x *Service) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *Service) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type ServiceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Service `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ServiceList) Reset() {
	*x = ServiceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceList) ProtoMessage() {}

func (x *ServiceList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceList.ProtoReflect.Descriptor instead.
func (*ServiceList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{7}
}

func (x *ServiceList) GetItems() []*Service {
	if x != nil {
		return x.Items
	}
	return nil
}

type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{8}
}

func (x *Label) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NotificationTarget      string `protobuf:"bytes,2,opt,name=notificationTarget,proto3" json:"notificationTarget,omitempty"` // enum of Slack, PagerDuty, Email, SMS, etc..
	NotificationDescription string `protobuf:"bytes,3,opt,name=notificationDescription,proto3" json:"notificationDescription,omitempty"`
	Description             string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ConditionType           string `protobuf:"bytes,5,opt,name=conditionType,proto3" json:"conditionType,omitempty"`
	ThresholdType           string `protobuf:"bytes,6,opt,name=thresholdType,proto3" json:"thresholdType,omitempty"`
	OnNoData                bool   `protobuf:"varint,7,opt,name=onNoData,proto3" json:"onNoData,omitempty"`
	OnCreate                bool   `protobuf:"varint,8,opt,name=onCreate,proto3" json:"onCreate,omitempty"`
	OnBreach                bool   `protobuf:"varint,9,opt,name=onBreach,proto3" json:"onBreach,omitempty"`
	OnResolved              bool   `protobuf:"varint,10,opt,name=onResolved,proto3" json:"onResolved,omitempty"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{9}
}

func (x *Alert) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Alert) GetNotificationTarget() string {
	if x != nil {
		return x.NotificationTarget
	}
	return ""
}

func (x *Alert) GetNotificationDescription() string {
	if x != nil {
		return x.NotificationDescription
	}
	return ""
}

func (x *Alert) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Alert) GetConditionType() string {
	if x != nil {
		return x.ConditionType
	}
	return ""
}

func (x *Alert) GetThresholdType() string {
	if x != nil {
		return x.ThresholdType
	}
	return ""
}

func (x *Alert) GetOnNoData() bool {
	if x != nil {
		return x.OnNoData
	}
	return false
}

func (x *Alert) GetOnCreate() bool {
	if x != nil {
		return x.OnCreate
	}
	return false
}

func (x *Alert) GetOnBreach() bool {
	if x != nil {
		return x.OnBreach
	}
	return false
}

func (x *Alert) GetOnResolved() bool {
	if x != nil {
		return x.OnResolved
	}
	return false
}

type ServiceLevelObjective struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Datasource        string               `protobuf:"bytes,2,opt,name=datasource,proto3" json:"datasource,omitempty"`
	ClusterId         string               `protobuf:"bytes,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	ServiceId         string               `protobuf:"bytes,4,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	GoodMetricName    string               `protobuf:"bytes,5,opt,name=goodMetricName,proto3" json:"goodMetricName,omitempty"`
	TotalMetricName   string               `protobuf:"bytes,6,opt,name=totalMetricName,proto3" json:"totalMetricName,omitempty"`
	GoodEvents        []*Event             `protobuf:"bytes,7,rep,name=goodEvents,proto3" json:"goodEvents,omitempty"`
	TotalEvents       []*Event             `protobuf:"bytes,8,rep,name=totalEvents,proto3" json:"totalEvents,omitempty"`
	SloPeriod         string               `protobuf:"bytes,9,opt,name=sloPeriod,proto3" json:"sloPeriod,omitempty"`                  // 7d, 28d or 30d
	BudgetingInterval *durationpb.Duration `protobuf:"bytes,10,opt,name=budgetingInterval,proto3" json:"budgetingInterval,omitempty"` // budgeting interval should be between 1m and 60m
	Target            *Target              `protobuf:"bytes,11,opt,name=target,proto3" json:"target,omitempty"`
	Labels            []*Label             `protobuf:"bytes,12,rep,name=labels,proto3" json:"labels,omitempty"`
	AlertTargets      []*Alert             `protobuf:"bytes,13,rep,name=alertTargets,proto3" json:"alertTargets,omitempty"`
}

func (x *ServiceLevelObjective) Reset() {
	*x = ServiceLevelObjective{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceLevelObjective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceLevelObjective) ProtoMessage() {}

func (x *ServiceLevelObjective) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceLevelObjective.ProtoReflect.Descriptor instead.
func (*ServiceLevelObjective) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{10}
}

func (x *ServiceLevelObjective) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceLevelObjective) GetDatasource() string {
	if x != nil {
		return x.Datasource
	}
	return ""
}

func (x *ServiceLevelObjective) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ServiceLevelObjective) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceLevelObjective) GetGoodMetricName() string {
	if x != nil {
		return x.GoodMetricName
	}
	return ""
}

func (x *ServiceLevelObjective) GetTotalMetricName() string {
	if x != nil {
		return x.TotalMetricName
	}
	return ""
}

func (x *ServiceLevelObjective) GetGoodEvents() []*Event {
	if x != nil {
		return x.GoodEvents
	}
	return nil
}

func (x *ServiceLevelObjective) GetTotalEvents() []*Event {
	if x != nil {
		return x.TotalEvents
	}
	return nil
}

func (x *ServiceLevelObjective) GetSloPeriod() string {
	if x != nil {
		return x.SloPeriod
	}
	return ""
}

func (x *ServiceLevelObjective) GetBudgetingInterval() *durationpb.Duration {
	if x != nil {
		return x.BudgetingInterval
	}
	return nil
}

func (x *ServiceLevelObjective) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ServiceLevelObjective) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ServiceLevelObjective) GetAlertTargets() []*Alert {
	if x != nil {
		return x.AlertTargets
	}
	return nil
}

type CreateSLORequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slo *ServiceLevelObjective `protobuf:"bytes,1,opt,name=slo,proto3" json:"slo,omitempty"`
}

func (x *CreateSLORequest) Reset() {
	*x = CreateSLORequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSLORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSLORequest) ProtoMessage() {}

func (x *CreateSLORequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSLORequest.ProtoReflect.Descriptor instead.
func (*CreateSLORequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{11}
}

func (x *CreateSLORequest) GetSlo() *ServiceLevelObjective {
	if x != nil {
		return x.Slo
	}
	return nil
}

type EventPairList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*EventPair `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *EventPairList) Reset() {
	*x = EventPairList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPairList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPairList) ProtoMessage() {}

func (x *EventPairList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPairList.ProtoReflect.Descriptor instead.
func (*EventPairList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{12}
}

func (x *EventPairList) GetItems() []*EventPair {
	if x != nil {
		return x.Items
	}
	return nil
}

type EventPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Vals []string `protobuf:"bytes,2,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *EventPair) Reset() {
	*x = EventPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPair) ProtoMessage() {}

func (x *EventPair) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPair.ProtoReflect.Descriptor instead.
func (*EventPair) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{13}
}

func (x *EventPair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *EventPair) GetVals() []string {
	if x != nil {
		return x.Vals
	}
	return nil
}

type SLOData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SLO       *ServiceLevelObjective `protobuf:"bytes,2,opt,name=SLO,proto3" json:"SLO,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *SLOData) Reset() {
	*x = SLOData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLOData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLOData) ProtoMessage() {}

func (x *SLOData) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLOData.ProtoReflect.Descriptor instead.
func (*SLOData) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{14}
}

func (x *SLOData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SLOData) GetSLO() *ServiceLevelObjective {
	if x != nil {
		return x.SLO
	}
	return nil
}

func (x *SLOData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{15}
}

func (x *Target) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata *MetricMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Metric) Reset() {
	*x = Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{16}
}

func (x *Metric) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Metric) GetMetadata() *MetricMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type MetricMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Type        string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Unit        string `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *MetricMetadata) Reset() {
	*x = MetricMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricMetadata) ProtoMessage() {}

func (x *MetricMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricMetadata.ProtoReflect.Descriptor instead.
func (*MetricMetadata) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{17}
}

func (x *MetricMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MetricMetadata) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MetricMetadata) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type MetricList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Metric `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MetricList) Reset() {
	*x = MetricList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricList) ProtoMessage() {}

func (x *MetricList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricList.ProtoReflect.Descriptor instead.
func (*MetricList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{18}
}

func (x *MetricList) GetItems() []*Metric {
	if x != nil {
		return x.Items
	}
	return nil
}

type ServiceLevelObjectiveList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SLOData `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ServiceLevelObjectiveList) Reset() {
	*x = ServiceLevelObjectiveList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceLevelObjectiveList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceLevelObjectiveList) ProtoMessage() {}

func (x *ServiceLevelObjectiveList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceLevelObjectiveList.ProtoReflect.Descriptor instead.
func (*ServiceLevelObjectiveList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{19}
}

func (x *ServiceLevelObjectiveList) GetItems() []*SLOData {
	if x != nil {
		return x.Items
	}
	return nil
}

type SLOStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State SLOStatusState `protobuf:"varint,1,opt,name=state,proto3,enum=slo.SLOStatusState" json:"state,omitempty"`
}

func (x *SLOStatus) Reset() {
	*x = SLOStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLOStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLOStatus) ProtoMessage() {}

func (x *SLOStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLOStatus.ProtoReflect.Descriptor instead.
func (*SLOStatus) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{20}
}

func (x *SLOStatus) GetState() SLOStatusState {
	if x != nil {
		return x.State
	}
	return SLOStatusState_Creating
}

type SLOPreviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlotVector *PlotVector `protobuf:"bytes,1,opt,name=plotVector,proto3" json:"plotVector,omitempty"`
}

func (x *SLOPreviewResponse) Reset() {
	*x = SLOPreviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLOPreviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLOPreviewResponse) ProtoMessage() {}

func (x *SLOPreviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLOPreviewResponse.ProtoReflect.Descriptor instead.
func (*SLOPreviewResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{21}
}

func (x *SLOPreviewResponse) GetPlotVector() *PlotVector {
	if x != nil {
		return x.PlotVector
	}
	return nil
}

type PlotVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items   []*DataPoint          `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Windows []*AlertFiringWindows `protobuf:"bytes,2,rep,name=windows,proto3" json:"windows,omitempty"`
}

func (x *PlotVector) Reset() {
	*x = PlotVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlotVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotVector) ProtoMessage() {}

func (x *PlotVector) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotVector.ProtoReflect.Descriptor instead.
func (*PlotVector) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{22}
}

func (x *PlotVector) GetItems() []*DataPoint {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PlotVector) GetWindows() []*AlertFiringWindows {
	if x != nil {
		return x.Windows
	}
	return nil
}

type DataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sli       float64                `protobuf:"fixed64,1,opt,name=sli,proto3" json:"sli,omitempty"`
	Objective float64                `protobuf:"fixed64,2,opt,name=objective,proto3" json:"objective,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{23}
}

func (x *DataPoint) GetSli() float64 {
	if x != nil {
		return x.Sli
	}
	return 0
}

func (x *DataPoint) GetObjective() float64 {
	if x != nil {
		return x.Objective
	}
	return 0
}

func (x *DataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type AlertFiringWindows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Severity string                 `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"`
}

func (x *AlertFiringWindows) Reset() {
	*x = AlertFiringWindows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertFiringWindows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertFiringWindows) ProtoMessage() {}

func (x *AlertFiringWindows) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertFiringWindows.ProtoReflect.Descriptor instead.
func (*AlertFiringWindows) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{24}
}

func (x *AlertFiringWindows) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *AlertFiringWindows) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *AlertFiringWindows) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

type ListServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datasource string `protobuf:"bytes,1,opt,name=datasource,proto3" json:"datasource,omitempty"`
}

func (x *ListServiceRequest) Reset() {
	*x = ListServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceRequest) ProtoMessage() {}

func (x *ListServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceRequest.ProtoReflect.Descriptor instead.
func (*ListServiceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP(), []int{25}
}

func (x *ListServiceRequest) GetDatasource() string {
	if x != nil {
		return x.Datasource
	}
	return ""
}

var File_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto protoreflect.FileDescriptor

var file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x73, 0x6c, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x73, 0x6c, 0x6f, 0x2f, 0x73, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x73, 0x6c, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e,
	0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x05, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x2d, 0x0a, 0x09, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x0b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49, 0x64, 0x47, 0x6f, 0x6f,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49, 0x64, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x49, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x45, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x31,
	0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73,
	0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x1b, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe7,
	0x02, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x17,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x6e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x6e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x6f, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x22, 0x93, 0x04, 0x0a, 0x15, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x6f, 0x6f, 0x64,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x2c, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x47, 0x0a, 0x11,
	0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x11, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x6c, 0x6f,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2e,
	0x0a, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0x40,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x4c, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x73, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x03, 0x73, 0x6c, 0x6f,
	0x22, 0x35, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x72,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x31, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x07, 0x53,
	0x4c, 0x4f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x03, 0x53, 0x4c, 0x4f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52,
	0x03, 0x53, 0x4c, 0x4f, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x1e,
	0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x49,
	0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6c, 0x6f,
	0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x0e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x2f, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3f, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x4c, 0x4f, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x36, 0x0a, 0x09, 0x53, 0x4c, 0x4f, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x4c, 0x4f, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x45, 0x0a, 0x12, 0x53, 0x4c, 0x4f, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x70, 0x6c, 0x6f, 0x74, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6c, 0x6f, 0x2e,
	0x50, 0x6c, 0x6f, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x70, 0x6c, 0x6f, 0x74,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x65, 0x0a, 0x0a, 0x50, 0x6c, 0x6f, 0x74, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6c,
	0x6f, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x73, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x22, 0x75, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6c,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x6c, 0x69, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x72, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x22, 0x34, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2a, 0x61, 0x0a,
	0x0e, 0x53, 0x4c, 0x4f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x6b, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x12, 0x11, 0x0a,
	0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x05,
	0x32, 0xae, 0x06, 0x0a, 0x03, 0x53, 0x4c, 0x4f, 0x12, 0x45, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x4c, 0x4f, 0x12, 0x15, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x4c, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x10, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x3a, 0x01, 0x2a, 0x22, 0x05, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x12,
	0x3b, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x53, 0x4c, 0x4f, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x0c, 0x2e, 0x73, 0x6c, 0x6f,
	0x2e, 0x53, 0x4c, 0x4f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c,
	0x22, 0x0a, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x51, 0x0a, 0x08,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x4c, 0x4f, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1e, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x0d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x07, 0x12, 0x05, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x12,
	0x48, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x4c, 0x4f, 0x12, 0x0c, 0x2e, 0x73,
	0x6c, 0x6f, 0x2e, 0x53, 0x4c, 0x4f, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x1a, 0x0a, 0x2f,
	0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x48, 0x0a, 0x09, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x4c, 0x4f, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x2a, 0x0a, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x43, 0x0a, 0x08, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x53, 0x4c, 0x4f, 0x12,
	0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x1a, 0x0c, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x4c, 0x4f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x18,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x10, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x2f, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x17, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0f, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x22, 0x08, 0x2f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x12, 0x4d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x22, 0x09, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x16, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x0f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09,
	0x22, 0x07, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x1a, 0x0e, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x4c, 0x4f, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x11, 0x2f, 0x73,
	0x6c, 0x6f, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x50, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x15, 0x2e, 0x73, 0x6c, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x4c, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x73, 0x6c, 0x6f, 0x2e, 0x53, 0x4c, 0x4f, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0f, 0x22, 0x0d, 0x2f, 0x73, 0x6c, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x73, 0x6c, 0x6f, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x73, 0x6c, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescOnce sync.Once
	file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescData = file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDesc
)

func file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescGZIP() []byte {
	file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescOnce.Do(func() {
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescData)
	})
	return file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDescData
}

var file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_goTypes = []interface{}{
	(SLOStatusState)(0),               // 0: slo.SLOStatusState
	(*ListEventsRequest)(nil),         // 1: slo.ListEventsRequest
	(*ListMetricsRequest)(nil),        // 2: slo.ListMetricsRequest
	(*ListServicesRequest)(nil),       // 3: slo.ListServicesRequest
	(*Event)(nil),                     // 4: slo.Event
	(*EventList)(nil),                 // 5: slo.EventList
	(*ServiceInfo)(nil),               // 6: slo.ServiceInfo
	(*Service)(nil),                   // 7: slo.Service
	(*ServiceList)(nil),               // 8: slo.ServiceList
	(*Label)(nil),                     // 9: slo.Label
	(*Alert)(nil),                     // 10: slo.Alert
	(*ServiceLevelObjective)(nil),     // 11: slo.ServiceLevelObjective
	(*CreateSLORequest)(nil),          // 12: slo.CreateSLORequest
	(*EventPairList)(nil),             // 13: slo.EventPairList
	(*EventPair)(nil),                 // 14: slo.EventPair
	(*SLOData)(nil),                   // 15: slo.SLOData
	(*Target)(nil),                    // 16: slo.Target
	(*Metric)(nil),                    // 17: slo.Metric
	(*MetricMetadata)(nil),            // 18: slo.MetricMetadata
	(*MetricList)(nil),                // 19: slo.MetricList
	(*ServiceLevelObjectiveList)(nil), // 20: slo.ServiceLevelObjectiveList
	(*SLOStatus)(nil),                 // 21: slo.SLOStatus
	(*SLOPreviewResponse)(nil),        // 22: slo.SLOPreviewResponse
	(*PlotVector)(nil),                // 23: slo.PlotVector
	(*DataPoint)(nil),                 // 24: slo.DataPoint
	(*AlertFiringWindows)(nil),        // 25: slo.AlertFiringWindows
	(*ListServiceRequest)(nil),        // 26: slo.ListServiceRequest
	(*durationpb.Duration)(nil),       // 27: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),     // 28: google.protobuf.Timestamp
	(*v1.Reference)(nil),              // 29: core.Reference
	(*emptypb.Empty)(nil),             // 30: google.protobuf.Empty
}
var file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_depIdxs = []int32{
	4,  // 0: slo.EventList.items:type_name -> slo.Event
	7,  // 1: slo.ServiceList.items:type_name -> slo.Service
	4,  // 2: slo.ServiceLevelObjective.goodEvents:type_name -> slo.Event
	4,  // 3: slo.ServiceLevelObjective.totalEvents:type_name -> slo.Event
	27, // 4: slo.ServiceLevelObjective.budgetingInterval:type_name -> google.protobuf.Duration
	16, // 5: slo.ServiceLevelObjective.target:type_name -> slo.Target
	9,  // 6: slo.ServiceLevelObjective.labels:type_name -> slo.Label
	10, // 7: slo.ServiceLevelObjective.alertTargets:type_name -> slo.Alert
	11, // 8: slo.CreateSLORequest.slo:type_name -> slo.ServiceLevelObjective
	14, // 9: slo.EventPairList.items:type_name -> slo.EventPair
	11, // 10: slo.SLOData.SLO:type_name -> slo.ServiceLevelObjective
	28, // 11: slo.SLOData.createdAt:type_name -> google.protobuf.Timestamp
	18, // 12: slo.Metric.metadata:type_name -> slo.MetricMetadata
	17, // 13: slo.MetricList.items:type_name -> slo.Metric
	15, // 14: slo.ServiceLevelObjectiveList.items:type_name -> slo.SLOData
	0,  // 15: slo.SLOStatus.state:type_name -> slo.SLOStatusState
	23, // 16: slo.SLOPreviewResponse.plotVector:type_name -> slo.PlotVector
	24, // 17: slo.PlotVector.items:type_name -> slo.DataPoint
	25, // 18: slo.PlotVector.windows:type_name -> slo.AlertFiringWindows
	28, // 19: slo.DataPoint.timestamp:type_name -> google.protobuf.Timestamp
	28, // 20: slo.AlertFiringWindows.start:type_name -> google.protobuf.Timestamp
	28, // 21: slo.AlertFiringWindows.end:type_name -> google.protobuf.Timestamp
	12, // 22: slo.SLO.CreateSLO:input_type -> slo.CreateSLORequest
	29, // 23: slo.SLO.GetSLO:input_type -> core.Reference
	30, // 24: slo.SLO.ListSLOs:input_type -> google.protobuf.Empty
	15, // 25: slo.SLO.UpdateSLO:input_type -> slo.SLOData
	29, // 26: slo.SLO.DeleteSLO:input_type -> core.Reference
	29, // 27: slo.SLO.CloneSLO:input_type -> core.Reference
	2,  // 28: slo.SLO.ListMetrics:input_type -> slo.ListMetricsRequest
	3,  // 29: slo.SLO.ListServices:input_type -> slo.ListServicesRequest
	1,  // 30: slo.SLO.ListEvents:input_type -> slo.ListEventsRequest
	29, // 31: slo.SLO.Status:input_type -> core.Reference
	12, // 32: slo.SLO.Preview:input_type -> slo.CreateSLORequest
	29, // 33: slo.SLO.CreateSLO:output_type -> core.Reference
	15, // 34: slo.SLO.GetSLO:output_type -> slo.SLOData
	20, // 35: slo.SLO.ListSLOs:output_type -> slo.ServiceLevelObjectiveList
	30, // 36: slo.SLO.UpdateSLO:output_type -> google.protobuf.Empty
	30, // 37: slo.SLO.DeleteSLO:output_type -> google.protobuf.Empty
	15, // 38: slo.SLO.CloneSLO:output_type -> slo.SLOData
	19, // 39: slo.SLO.ListMetrics:output_type -> slo.MetricList
	8,  // 40: slo.SLO.ListServices:output_type -> slo.ServiceList
	5,  // 41: slo.SLO.ListEvents:output_type -> slo.EventList
	21, // 42: slo.SLO.Status:output_type -> slo.SLOStatus
	22, // 43: slo.SLO.Preview:output_type -> slo.SLOPreviewResponse
	33, // [33:44] is the sub-list for method output_type
	22, // [22:33] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_init() }
func file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_init() {
	if File_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceLevelObjective); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSLORequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPairList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SLOData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceLevelObjectiveList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SLOStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SLOPreviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlotVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertFiringWindows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_goTypes,
		DependencyIndexes: file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_depIdxs,
		EnumInfos:         file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_enumTypes,
		MessageInfos:      file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_msgTypes,
	}.Build()
	File_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto = out.File
	file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_rawDesc = nil
	file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_goTypes = nil
	file_github_com_rancher_opni_pkg_plugins_slo_pkg_apis_slo_slo_proto_depIdxs = nil
}

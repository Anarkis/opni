name: Build
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - ".github/**"
      - "!.github/workflows/build.yaml"
  pull_request_target:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - ".github/**"
      - "!.github/workflows/build.yaml"
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Go Module Cache
        uses: actions/cache@v2.1.7
        with:
          path: ~/go
          key: cache-go-${{ runner.os }}-${{ github.sha }}
          restore-keys: cache-go-${{ runner.os }}-
      - name: Test Binary Cache
        uses: actions/cache@v2.1.7
        with:
          path: /home/runner/work/opni-monitoring/opni-monitoring/testbin
          key: cache-testbin-${{ runner.os }}-${{ github.sha }}
          restore-keys: cache-testbin-${{ runner.os }}-
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          stable: false
          go-version: "1.18.0-beta2"
      - name: Install dependencies
        run: go mod download
      - name: Build
        run: go run github.com/magefile/mage
      - name: Test
        run: go run github.com/magefile/mage test
      - name: Log in to Docker Hub
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Configure Docker image metadata
        id: meta
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: docker/metadata-action@v3
        with:
          images: kralicky/opni-monitoring
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Build and push Docker image
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request_target' }}
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Upload test results to Codecov
        uses: codecov/codecov-action@v1
        with:
          files: ./cover.out

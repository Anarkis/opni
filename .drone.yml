---
# test 3
kind: pipeline
type: docker
name: build-amd64
platform:
  os: linux
  arch: amd64
steps:
  - name: publish-python-builder1
    image: plugins/docker
    settings:
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username
      context: images/python/
      dockerfile: images/python/Dockerfile
      cache_from: rancher/opni-python-base:builder1
      target: builder1
      repo: rancher/opni-python-base
      tags:
        - "builder1"
    when:
      instance:
        - drone-publish.rancher.io
      branch:
        - main
      event:
        exclude:
          - pull_request
  - name: publish-python-builder2
    image: plugins/docker
    settings:
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username
      context: images/python/
      dockerfile: images/python/Dockerfile
      cache_from:
        - rancher/opni-python-base:builder1
        - rancher/opni-python-base:builder2
      target: builder2
      repo: rancher/opni-python-base
      tags:
        - "builder2"
    when:
      instance:
        - drone-publish.rancher.io
      branch:
        - main
      event:
        exclude:
          - pull_request
  - name: publish-python-base
    image: plugins/docker
    settings:
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username
      context: images/python/
      dockerfile: images/python/Dockerfile
      cache_from:
        - rancher/opni-python-base:builder1
        - rancher/opni-python-base:builder2
        - rancher/opni-python-base:3.8
      target: base-final
      repo: rancher/opni-python-base
      tags:
        - "3.8"
    when:
      instance:
        - drone-publish.rancher.io
      branch:
        - main
      event:
        exclude:
          - pull_request
  - name: publish-python-torch
    image: plugins/docker
    settings:
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username
      context: images/python/
      dockerfile: images/python/Dockerfile
      cache_from:
        - rancher/opni-python-base:builder1
        - rancher/opni-python-base:builder2
        - rancher/opni-python-base:3.8
        - rancher/opni-python-base:3.8-torch
      target: torch
      repo: rancher/opni-python-base
      tags:
        - "3.8-torch"
    when:
      instance:
        - drone-publish.rancher.io
      branch:
        - main
      event:
        exclude:
          - pull_request
  - name: publish-python-elasticdump
    image: plugins/docker
    settings:
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username
      context: images/python/
      dockerfile: images/python/Dockerfile.elasticdump
      cache_from:
        - rancher/opni-python-base:3.8-node14-elasticdump
      repo: rancher/opni-python-base
      tags:
        - "3.8-node14-elasticdump"
    when:
      instance:
        - drone-publish.rancher.io
      branch:
        - main
      event:
        exclude:
          - pull_request
  - name: build-and-package
    image: rancher/dapper:v0.5.5
    commands:
      - CROSS=1 dapper ci
    volumes:
      - name: docker
        path: /var/run/docker.sock
  - name: test
    image: rancher/dapper:v0.5.5
    commands:
      - dapper test
    volumes:
      - name: docker
        path: /var/run/docker.sock
  - name: stage-binaries
    image: rancher/dapper:v0.5.5
    commands:
      - "cp -r ./bin/manager ./package/"
    when:
      event:
        - tag
        - push
      instance:
        - drone-publish.rancher.io
      ref:
        - refs/heads/main
        - refs/tags/*
  - name: publish-dockerhub-tag
    image: plugins/docker
    settings:
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username
      context: package/
      dockerfile: package/Dockerfile
      repo: rancher/opni
      tags:
        - ${DRONE_TAG}
    when:
      event:
        - tag
      instance:
        - drone-publish.rancher.io
      refs:
        - refs/heads/main
        - refs/tags/*
  - name: publish-dockerhub-main
    image: plugins/docker
    settings:
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username
      context: package/
      dockerfile: package/Dockerfile
      repo: rancher/opni
      tags:
        - latest
    when:
      event:
        - push
      instance:
        - drone-publish.rancher.io
      branch:
        - main
  - name: publish-bin-artifacts
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      checksum:
        - sha256
      files:
        - bin/opnictl*
    when:
      event:
        - tag
      instance:
        - drone-publish.rancher.io
      ref:
        - refs/heads/main
        - refs/tags/*
  - name: k3dsvc
    image: rancher/k3d:4.4.8dind
    detach: true
    privileged: true
    commands:
      - nohup dockerd-entrypoint.sh --insecure-registry=172.0.0.0/8 &
      - until docker ps &>/dev/null; do sleep 1s; done
      - NEW_ID=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 6 | head -n 1)
      - k3d registry create k3dsvc --port k3dsvc:5000
      - k3d cluster create drone-$${NEW_ID} --config hack/k3d-drone.yaml
      - until kubectl --context k3d-drone-$${NEW_ID} -n kube-system wait --for=condition=Ready pods -l k8s-app; do sleep 1; done
      - k3d kubeconfig get drone-$${NEW_ID} > kubeconfig.yaml
      - echo "k3d started successfully"
      - tail -f /dev/null
    when:
      event:
        - pull_request
      branch:
        - main
      instance:
        - drone-pr.rancher.io
    volumes:
      - name: dindsock
        path: /var/run
  - name: e2e-test
    image: quay.io/dbason/tilt:go1.17-0.22.9
    environment:
      GOCACHE: /root/.cache/go-build
    commands:
      - until test -f ./kubeconfig.yaml; do sleep 1s; done
      - cat /etc/resolv.conf
      - export KUBECONFIG=$(realpath kubeconfig.yaml)
      - scripts/e2e
    volumes:
      - name: dindsock
        path: /var/run
      - name: gopkg
        path: /go/pkg
      - name: gocache
        path: /root/.cache/go-build
    when:
      event:
        - pull_request
      branch:
        - main
      instance:
        - drone-pr.rancher.io
volumes:
  - name: docker
    host:
      path: /var/run/docker.sock
  - name: dindsock
    temp: {}
  - name: gopkg
    host:
      path: /var/lib/docker/volumes/opni-build-go16-pkg/_data
  - name: gocache
    host:
      path: /var/lib/docker/volumes/opni-build-go16-cache/_data

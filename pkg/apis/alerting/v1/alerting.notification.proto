syntax = "proto3";
option go_package = "github.com/rancher/opni/pkg/apis/alerting/v1";

import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/api/http.proto";
import "google/api/annotations.proto";
import "google/rpc/status.proto";

import "github.com/rancher/opni/pkg/apis/core/v1/core.proto";
import "github.com/rancher/opni/pkg/apis/alerting/v1/alerting.proto";

package alerting;

// Opni-Alerting internal use
service AlertNotifications {
  rpc TriggerAlerts(TriggerAlertsRequest) returns (TriggerAlertsResponse) {
    option (google.api.http) = {
      post : "/trigger"
      body : "*"
    };
  }

  rpc ResolveAlerts(ResolveAlertsRequest) returns (ResolveAlertsResponse) {}

  rpc PushNotification(Notification) returns (google.protobuf.Empty) {
    option(google.api.http) = {
      post : "/push"
      body : "*"
    };
  }

  rpc ListRoutingRelationships(google.protobuf.Empty) 
    returns (ListRoutingRelationshipsResponse) {}
}


message Notification{
  string title = 1;
  string body = 2;
  optional core.Reference clusterId = 3;
  // opaque id set by the caller, used to deduplicate messages
  // if none is provided, hashes the title and body as a key
  optional string id = 4;
  // defaults to `Info`
  optional alerting.OpniSeverity severity = 5;
  // rate limiting key set by the caller, sending messages with the same key 
  // will be grouped and sent together
  optional string groupKey = 6;
  // defaults to `Custom`
  optional alerting.GoldenSignal goldenSignal = 7;
}

// opni-alerting internal use
message TriggerAlertsRequest {
  core.Reference conditionId = 1;
  string namespace = 2;
  string conditionName = 3;
  map<string, string> annotations = 4;
  map<string, string> labels = 5;
}

message TriggerAlertsResponse {}

message ResolveAlertsRequest {
  core.Reference conditionId = 1;
  string namespace = 2;
  string conditionName = 3;
  map<string, string> annotations = 4;
  map<string, string> labels = 5;
}

message ResolveAlertsResponse {}

message ListRoutingRelationshipsResponse{
  map<string, core.ReferenceList> routingRelationships = 1;
}
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v1.0.0
// source: github.com/rancher/opni/pkg/alerting/v1alpha/alerting.proto

package v1alpha

import (
	v1 "github.com/rancher/opni/pkg/apis/core/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Severity int32

const (
	Severity_INFO     Severity = 0
	Severity_WARNING  Severity = 1
	Severity_ERROR    Severity = 2
	Severity_CRITICAL Severity = 3
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "INFO",
		1: "WARNING",
		2: "ERROR",
		3: "CRITICAL",
	}
	Severity_value = map[string]int32{
		"INFO":     0,
		"WARNING":  1,
		"ERROR":    2,
		"CRITICAL": 3,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_enumTypes[0].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_enumTypes[0]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{0}
}

type AlertType int32

const (
	AlertType_SYSTEM       AlertType = 0
	AlertType_KUBE_STATE   AlertType = 1
	AlertType_COMPOSITION  AlertType = 2
	AlertType_CONTROL_FLOW AlertType = 3
)

// Enum value maps for AlertType.
var (
	AlertType_name = map[int32]string{
		0: "SYSTEM",
		1: "KUBE_STATE",
		2: "COMPOSITION",
		3: "CONTROL_FLOW",
	}
	AlertType_value = map[string]int32{
		"SYSTEM":       0,
		"KUBE_STATE":   1,
		"COMPOSITION":  2,
		"CONTROL_FLOW": 3,
	}
)

func (x AlertType) Enum() *AlertType {
	p := new(AlertType)
	*p = x
	return p
}

func (x AlertType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_enumTypes[1].Descriptor()
}

func (AlertType) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_enumTypes[1]
}

func (x AlertType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertType.Descriptor instead.
func (AlertType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{1}
}

type CompositionAction int32

const (
	CompositionAction_AND CompositionAction = 0
	CompositionAction_OR  CompositionAction = 1
)

// Enum value maps for CompositionAction.
var (
	CompositionAction_name = map[int32]string{
		0: "AND",
		1: "OR",
	}
	CompositionAction_value = map[string]int32{
		"AND": 0,
		"OR":  1,
	}
)

func (x CompositionAction) Enum() *CompositionAction {
	p := new(CompositionAction)
	*p = x
	return p
}

func (x CompositionAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompositionAction) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_enumTypes[2].Descriptor()
}

func (CompositionAction) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_enumTypes[2]
}

func (x CompositionAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompositionAction.Descriptor instead.
func (CompositionAction) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{2}
}

type ControlFlowAction int32

const (
	ControlFlowAction_IF_THEN     ControlFlowAction = 0
	ControlFlowAction_IF_NOT_THEN ControlFlowAction = 1
)

// Enum value maps for ControlFlowAction.
var (
	ControlFlowAction_name = map[int32]string{
		0: "IF_THEN",
		1: "IF_NOT_THEN",
	}
	ControlFlowAction_value = map[string]int32{
		"IF_THEN":     0,
		"IF_NOT_THEN": 1,
	}
)

func (x ControlFlowAction) Enum() *ControlFlowAction {
	p := new(ControlFlowAction)
	*p = x
	return p
}

func (x ControlFlowAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlFlowAction) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_enumTypes[3].Descriptor()
}

func (ControlFlowAction) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_enumTypes[3]
}

func (x ControlFlowAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlFlowAction.Descriptor instead.
func (ControlFlowAction) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{3}
}

type SilenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionId *v1.Reference        `protobuf:"bytes,1,opt,name=conditionId,proto3" json:"conditionId,omitempty"`
	Duration    *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *SilenceRequest) Reset() {
	*x = SilenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SilenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SilenceRequest) ProtoMessage() {}

func (x *SilenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SilenceRequest.ProtoReflect.Descriptor instead.
func (*SilenceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{0}
}

func (x *SilenceRequest) GetConditionId() *v1.Reference {
	if x != nil {
		return x.ConditionId
	}
	return nil
}

func (x *SilenceRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type TriggerAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionId *v1.Reference `protobuf:"bytes,1,opt,name=conditionId,proto3" json:"conditionId,omitempty"`
}

func (x *TriggerAlertsRequest) Reset() {
	*x = TriggerAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAlertsRequest) ProtoMessage() {}

func (x *TriggerAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAlertsRequest.ProtoReflect.Descriptor instead.
func (*TriggerAlertsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{1}
}

func (x *TriggerAlertsRequest) GetConditionId() *v1.Reference {
	if x != nil {
		return x.ConditionId
	}
	return nil
}

type TriggerAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TriggerAlertsResponse) Reset() {
	*x = TriggerAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAlertsResponse) ProtoMessage() {}

func (x *TriggerAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAlertsResponse.ProtoReflect.Descriptor instead.
func (*TriggerAlertsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{2}
}

type ListAlertLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels         []string               `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	Limit          uint64                 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	StartTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=startTimestamp,proto3" json:"startTimestamp,omitempty"`
	EndTimestamp   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=endTimestamp,proto3" json:"endTimestamp,omitempty"`
}

func (x *ListAlertLogRequest) Reset() {
	*x = ListAlertLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertLogRequest) ProtoMessage() {}

func (x *ListAlertLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertLogRequest.ProtoReflect.Descriptor instead.
func (*ListAlertLogRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{3}
}

func (x *ListAlertLogRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListAlertLogRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAlertLogRequest) GetStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTimestamp
	}
	return nil
}

func (x *ListAlertLogRequest) GetEndTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTimestamp
	}
	return nil
}

type UpdateAlertLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdateAlert *v1.AlertLog `protobuf:"bytes,2,opt,name=UpdateAlert,proto3" json:"UpdateAlert,omitempty"`
}

func (x *UpdateAlertLogRequest) Reset() {
	*x = UpdateAlertLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertLogRequest) ProtoMessage() {}

func (x *UpdateAlertLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertLogRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertLogRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateAlertLogRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAlertLogRequest) GetUpdateAlert() *v1.AlertLog {
	if x != nil {
		return x.UpdateAlert
	}
	return nil
}

type AlertCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Labels         []string                `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	Severity       Severity                `protobuf:"varint,4,opt,name=severity,proto3,enum=Severity" json:"severity,omitempty"`
	AlertType      *AlertTypeDetails       `protobuf:"bytes,5,opt,name=alertType,proto3" json:"alertType,omitempty"`
	NotificationId *string                 `protobuf:"bytes,6,opt,name=notificationId,proto3,oneof" json:"notificationId,omitempty"`
	Details        *EndpointImplementation `protobuf:"bytes,7,opt,name=details,proto3" json:"details,omitempty"`
	// Set & Unset via the silence API
	Silence *SilenceInfo `protobuf:"bytes,8,opt,name=silence,proto3" json:"silence,omitempty"`
}

func (x *AlertCondition) Reset() {
	*x = AlertCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertCondition) ProtoMessage() {}

func (x *AlertCondition) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertCondition.ProtoReflect.Descriptor instead.
func (*AlertCondition) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{5}
}

func (x *AlertCondition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertCondition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AlertCondition) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *AlertCondition) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_INFO
}

func (x *AlertCondition) GetAlertType() *AlertTypeDetails {
	if x != nil {
		return x.AlertType
	}
	return nil
}

func (x *AlertCondition) GetNotificationId() string {
	if x != nil && x.NotificationId != nil {
		return *x.NotificationId
	}
	return ""
}

func (x *AlertCondition) GetDetails() *EndpointImplementation {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AlertCondition) GetSilence() *SilenceInfo {
	if x != nil {
		return x.Silence
	}
	return nil
}

type AlertForest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action ControlFlowAction `protobuf:"varint,1,opt,name=action,proto3,enum=ControlFlowAction" json:"action,omitempty"`
}

func (x *AlertForest) Reset() {
	*x = AlertForest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertForest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertForest) ProtoMessage() {}

func (x *AlertForest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertForest.ProtoReflect.Descriptor instead.
func (*AlertForest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{6}
}

func (x *AlertForest) GetAction() ControlFlowAction {
	if x != nil {
		return x.Action
	}
	return ControlFlowAction_IF_THEN
}

type AlertTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root *AlertTreeNode `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *AlertTree) Reset() {
	*x = AlertTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertTree) ProtoMessage() {}

func (x *AlertTree) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertTree.ProtoReflect.Descriptor instead.
func (*AlertTree) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{7}
}

func (x *AlertTree) GetRoot() *AlertTreeNode {
	if x != nil {
		return x.Root
	}
	return nil
}

type AlertTreeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Condtion:
	//	*AlertTreeNode_Item
	Condtion isAlertTreeNode_Condtion `protobuf_oneof:"condtion"`
	Left     *AlertTreeNode           `protobuf:"bytes,2,opt,name=left,proto3" json:"left,omitempty"`
	Right    *AlertTreeNode           `protobuf:"bytes,3,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *AlertTreeNode) Reset() {
	*x = AlertTreeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertTreeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertTreeNode) ProtoMessage() {}

func (x *AlertTreeNode) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertTreeNode.ProtoReflect.Descriptor instead.
func (*AlertTreeNode) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{8}
}

func (m *AlertTreeNode) GetCondtion() isAlertTreeNode_Condtion {
	if m != nil {
		return m.Condtion
	}
	return nil
}

func (x *AlertTreeNode) GetItem() *AlertConditionWithId {
	if x, ok := x.GetCondtion().(*AlertTreeNode_Item); ok {
		return x.Item
	}
	return nil
}

func (x *AlertTreeNode) GetLeft() *AlertTreeNode {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *AlertTreeNode) GetRight() *AlertTreeNode {
	if x != nil {
		return x.Right
	}
	return nil
}

type isAlertTreeNode_Condtion interface {
	isAlertTreeNode_Condtion()
}

type AlertTreeNode_Item struct {
	Item *AlertConditionWithId `protobuf:"bytes,1,opt,name=item,proto3,oneof"`
}

func (*AlertTreeNode_Item) isAlertTreeNode_Condtion() {}

type AlertDetailChoicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertType AlertType `protobuf:"varint,1,opt,name=alertType,proto3,enum=AlertType" json:"alertType,omitempty"`
}

func (x *AlertDetailChoicesRequest) Reset() {
	*x = AlertDetailChoicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertDetailChoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertDetailChoicesRequest) ProtoMessage() {}

func (x *AlertDetailChoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertDetailChoicesRequest.ProtoReflect.Descriptor instead.
func (*AlertDetailChoicesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{9}
}

func (x *AlertDetailChoicesRequest) GetAlertType() AlertType {
	if x != nil {
		return x.AlertType
	}
	return AlertType_SYSTEM
}

type AlertDetailChoicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choices []*AlertTypeDetails `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
}

func (x *AlertDetailChoicesResponse) Reset() {
	*x = AlertDetailChoicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertDetailChoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertDetailChoicesResponse) ProtoMessage() {}

func (x *AlertDetailChoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertDetailChoicesResponse.ProtoReflect.Descriptor instead.
func (*AlertDetailChoicesResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{10}
}

func (x *AlertDetailChoicesResponse) GetChoices() []*AlertTypeDetails {
	if x != nil {
		return x.Choices
	}
	return nil
}

type AlertTypeDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*AlertTypeDetails_System
	//	*AlertTypeDetails_KubeState
	//	*AlertTypeDetails_Composition
	//	*AlertTypeDetails_ControlFlow
	Type isAlertTypeDetails_Type `protobuf_oneof:"type"`
}

func (x *AlertTypeDetails) Reset() {
	*x = AlertTypeDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertTypeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertTypeDetails) ProtoMessage() {}

func (x *AlertTypeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertTypeDetails.ProtoReflect.Descriptor instead.
func (*AlertTypeDetails) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{11}
}

func (m *AlertTypeDetails) GetType() isAlertTypeDetails_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *AlertTypeDetails) GetSystem() *AlertConditionSystem {
	if x, ok := x.GetType().(*AlertTypeDetails_System); ok {
		return x.System
	}
	return nil
}

func (x *AlertTypeDetails) GetKubeState() *AlertConditionKubeState {
	if x, ok := x.GetType().(*AlertTypeDetails_KubeState); ok {
		return x.KubeState
	}
	return nil
}

func (x *AlertTypeDetails) GetComposition() *AlertConditionComposition {
	if x, ok := x.GetType().(*AlertTypeDetails_Composition); ok {
		return x.Composition
	}
	return nil
}

func (x *AlertTypeDetails) GetControlFlow() *AlertConditionControlFlow {
	if x, ok := x.GetType().(*AlertTypeDetails_ControlFlow); ok {
		return x.ControlFlow
	}
	return nil
}

type isAlertTypeDetails_Type interface {
	isAlertTypeDetails_Type()
}

type AlertTypeDetails_System struct {
	System *AlertConditionSystem `protobuf:"bytes,1,opt,name=system,proto3,oneof"`
}

type AlertTypeDetails_KubeState struct {
	KubeState *AlertConditionKubeState `protobuf:"bytes,2,opt,name=kubeState,proto3,oneof"`
}

type AlertTypeDetails_Composition struct {
	Composition *AlertConditionComposition `protobuf:"bytes,3,opt,name=composition,proto3,oneof"`
}

type AlertTypeDetails_ControlFlow struct {
	ControlFlow *AlertConditionControlFlow `protobuf:"bytes,4,opt,name=controlFlow,proto3,oneof"`
}

func (*AlertTypeDetails_System) isAlertTypeDetails_Type() {}

func (*AlertTypeDetails_KubeState) isAlertTypeDetails_Type() {}

func (*AlertTypeDetails_Composition) isAlertTypeDetails_Type() {}

func (*AlertTypeDetails_ControlFlow) isAlertTypeDetails_Type() {}

type ListAlertTypeDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*ListAlertTypeDetails_System
	//	*ListAlertTypeDetails_KubeState
	//	*ListAlertTypeDetails_Composition
	//	*ListAlertTypeDetails_ControlFlow
	Type isListAlertTypeDetails_Type `protobuf_oneof:"type"`
}

func (x *ListAlertTypeDetails) Reset() {
	*x = ListAlertTypeDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertTypeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertTypeDetails) ProtoMessage() {}

func (x *ListAlertTypeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertTypeDetails.ProtoReflect.Descriptor instead.
func (*ListAlertTypeDetails) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{12}
}

func (m *ListAlertTypeDetails) GetType() isListAlertTypeDetails_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *ListAlertTypeDetails) GetSystem() *ListAlertConditionSystem {
	if x, ok := x.GetType().(*ListAlertTypeDetails_System); ok {
		return x.System
	}
	return nil
}

func (x *ListAlertTypeDetails) GetKubeState() *ListAlertConditionKubeState {
	if x, ok := x.GetType().(*ListAlertTypeDetails_KubeState); ok {
		return x.KubeState
	}
	return nil
}

func (x *ListAlertTypeDetails) GetComposition() *ListAlertConditionComposition {
	if x, ok := x.GetType().(*ListAlertTypeDetails_Composition); ok {
		return x.Composition
	}
	return nil
}

func (x *ListAlertTypeDetails) GetControlFlow() *ListAlertConditionControlFlow {
	if x, ok := x.GetType().(*ListAlertTypeDetails_ControlFlow); ok {
		return x.ControlFlow
	}
	return nil
}

type isListAlertTypeDetails_Type interface {
	isListAlertTypeDetails_Type()
}

type ListAlertTypeDetails_System struct {
	System *ListAlertConditionSystem `protobuf:"bytes,1,opt,name=system,proto3,oneof"`
}

type ListAlertTypeDetails_KubeState struct {
	KubeState *ListAlertConditionKubeState `protobuf:"bytes,2,opt,name=kubeState,proto3,oneof"`
}

type ListAlertTypeDetails_Composition struct {
	Composition *ListAlertConditionComposition `protobuf:"bytes,3,opt,name=composition,proto3,oneof"`
}

type ListAlertTypeDetails_ControlFlow struct {
	ControlFlow *ListAlertConditionControlFlow `protobuf:"bytes,4,opt,name=controlFlow,proto3,oneof"`
}

func (*ListAlertTypeDetails_System) isListAlertTypeDetails_Type() {}

func (*ListAlertTypeDetails_KubeState) isListAlertTypeDetails_Type() {}

func (*ListAlertTypeDetails_Composition) isListAlertTypeDetails_Type() {}

func (*ListAlertTypeDetails_ControlFlow) isListAlertTypeDetails_Type() {}

type AlertConditionSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AlertConditionSystem) Reset() {
	*x = AlertConditionSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionSystem) ProtoMessage() {}

func (x *AlertConditionSystem) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionSystem.ProtoReflect.Descriptor instead.
func (*AlertConditionSystem) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{13}
}

type ListAlertConditionSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAlertConditionSystem) Reset() {
	*x = ListAlertConditionSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionSystem) ProtoMessage() {}

func (x *ListAlertConditionSystem) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionSystem.ProtoReflect.Descriptor instead.
func (*ListAlertConditionSystem) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{14}
}

type AlertConditionKubeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// must be one of the listed kube objects
	Object string `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	// must be one of the listed kube states
	State string               `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	For   *durationpb.Duration `protobuf:"bytes,3,opt,name=for,proto3" json:"for,omitempty"`
}

func (x *AlertConditionKubeState) Reset() {
	*x = AlertConditionKubeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionKubeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionKubeState) ProtoMessage() {}

func (x *AlertConditionKubeState) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionKubeState.ProtoReflect.Descriptor instead.
func (*AlertConditionKubeState) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{15}
}

func (x *AlertConditionKubeState) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *AlertConditionKubeState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AlertConditionKubeState) GetFor() *durationpb.Duration {
	if x != nil {
		return x.For
	}
	return nil
}

type ListAlertConditionKubeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects []string               `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	States  []string               `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
	Fors    []*durationpb.Duration `protobuf:"bytes,3,rep,name=fors,proto3" json:"fors,omitempty"`
}

func (x *ListAlertConditionKubeState) Reset() {
	*x = ListAlertConditionKubeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionKubeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionKubeState) ProtoMessage() {}

func (x *ListAlertConditionKubeState) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionKubeState.ProtoReflect.Descriptor instead.
func (*ListAlertConditionKubeState) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{16}
}

func (x *ListAlertConditionKubeState) GetObjects() []string {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *ListAlertConditionKubeState) GetStates() []string {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *ListAlertConditionKubeState) GetFors() []*durationpb.Duration {
	if x != nil {
		return x.Fors
	}
	return nil
}

type ListSelectAlertInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertType AlertType `protobuf:"varint,1,opt,name=alertType,proto3,enum=AlertType" json:"alertType,omitempty"`
}

func (x *ListSelectAlertInfo) Reset() {
	*x = ListSelectAlertInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSelectAlertInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSelectAlertInfo) ProtoMessage() {}

func (x *ListSelectAlertInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSelectAlertInfo.ProtoReflect.Descriptor instead.
func (*ListSelectAlertInfo) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{17}
}

func (x *ListSelectAlertInfo) GetAlertType() AlertType {
	if x != nil {
		return x.AlertType
	}
	return AlertType_SYSTEM
}

type AlertConditionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AlertConditionWithId `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AlertConditionList) Reset() {
	*x = AlertConditionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionList) ProtoMessage() {}

func (x *AlertConditionList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionList.ProtoReflect.Descriptor instead.
func (*AlertConditionList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{18}
}

func (x *AlertConditionList) GetItems() []*AlertConditionWithId {
	if x != nil {
		return x.Items
	}
	return nil
}

type AlertConditionComposition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X *v1.Reference `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y *v1.Reference `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *AlertConditionComposition) Reset() {
	*x = AlertConditionComposition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionComposition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionComposition) ProtoMessage() {}

func (x *AlertConditionComposition) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionComposition.ProtoReflect.Descriptor instead.
func (*AlertConditionComposition) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{19}
}

func (x *AlertConditionComposition) GetX() *v1.Reference {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *AlertConditionComposition) GetY() *v1.Reference {
	if x != nil {
		return x.Y
	}
	return nil
}

type ListAlertConditionComposition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X []*v1.Reference `protobuf:"bytes,1,rep,name=x,proto3" json:"x,omitempty"`
	Y []*v1.Reference `protobuf:"bytes,2,rep,name=y,proto3" json:"y,omitempty"`
}

func (x *ListAlertConditionComposition) Reset() {
	*x = ListAlertConditionComposition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionComposition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionComposition) ProtoMessage() {}

func (x *ListAlertConditionComposition) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionComposition.ProtoReflect.Descriptor instead.
func (*ListAlertConditionComposition) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{20}
}

func (x *ListAlertConditionComposition) GetX() []*v1.Reference {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *ListAlertConditionComposition) GetY() []*v1.Reference {
	if x != nil {
		return x.Y
	}
	return nil
}

type AlertConditionControlFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X   *v1.Reference        `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y   *v1.Reference        `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	For *durationpb.Duration `protobuf:"bytes,3,opt,name=for,proto3" json:"for,omitempty"`
}

func (x *AlertConditionControlFlow) Reset() {
	*x = AlertConditionControlFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionControlFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionControlFlow) ProtoMessage() {}

func (x *AlertConditionControlFlow) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionControlFlow.ProtoReflect.Descriptor instead.
func (*AlertConditionControlFlow) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{21}
}

func (x *AlertConditionControlFlow) GetX() *v1.Reference {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *AlertConditionControlFlow) GetY() *v1.Reference {
	if x != nil {
		return x.Y
	}
	return nil
}

func (x *AlertConditionControlFlow) GetFor() *durationpb.Duration {
	if x != nil {
		return x.For
	}
	return nil
}

type ListAlertConditionControlFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X    []*v1.Reference        `protobuf:"bytes,1,rep,name=x,proto3" json:"x,omitempty"`
	Y    []*v1.Reference        `protobuf:"bytes,2,rep,name=y,proto3" json:"y,omitempty"`
	Fors []*durationpb.Duration `protobuf:"bytes,3,rep,name=fors,proto3" json:"fors,omitempty"`
}

func (x *ListAlertConditionControlFlow) Reset() {
	*x = ListAlertConditionControlFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionControlFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionControlFlow) ProtoMessage() {}

func (x *ListAlertConditionControlFlow) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionControlFlow.ProtoReflect.Descriptor instead.
func (*ListAlertConditionControlFlow) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{22}
}

func (x *ListAlertConditionControlFlow) GetX() []*v1.Reference {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *ListAlertConditionControlFlow) GetY() []*v1.Reference {
	if x != nil {
		return x.Y
	}
	return nil
}

func (x *ListAlertConditionControlFlow) GetFors() []*durationpb.Duration {
	if x != nil {
		return x.Fors
	}
	return nil
}

type AlertConditionWithId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *v1.Reference   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AlertCondition *AlertCondition `protobuf:"bytes,2,opt,name=alertCondition,proto3" json:"alertCondition,omitempty"`
}

func (x *AlertConditionWithId) Reset() {
	*x = AlertConditionWithId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionWithId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionWithId) ProtoMessage() {}

func (x *AlertConditionWithId) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionWithId.ProtoReflect.Descriptor instead.
func (*AlertConditionWithId) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{23}
}

func (x *AlertConditionWithId) GetId() *v1.Reference {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AlertConditionWithId) GetAlertCondition() *AlertCondition {
	if x != nil {
		return x.AlertCondition
	}
	return nil
}

type ListAlertConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAlertConditionRequest) Reset() {
	*x = ListAlertConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionRequest) ProtoMessage() {}

func (x *ListAlertConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionRequest.ProtoReflect.Descriptor instead.
func (*ListAlertConditionRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{24}
}

type UpdateAlertConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *v1.Reference   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdateAlert *AlertCondition `protobuf:"bytes,2,opt,name=updateAlert,proto3" json:"updateAlert,omitempty"`
}

func (x *UpdateAlertConditionRequest) Reset() {
	*x = UpdateAlertConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertConditionRequest) ProtoMessage() {}

func (x *UpdateAlertConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertConditionRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertConditionRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateAlertConditionRequest) GetId() *v1.Reference {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateAlertConditionRequest) GetUpdateAlert() *AlertCondition {
	if x != nil {
		return x.UpdateAlert
	}
	return nil
}

type PreviewAlertConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PreviewAlertConditionRequest) Reset() {
	*x = PreviewAlertConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviewAlertConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewAlertConditionRequest) ProtoMessage() {}

func (x *PreviewAlertConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewAlertConditionRequest.ProtoReflect.Descriptor instead.
func (*PreviewAlertConditionRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{26}
}

type PreviewAlertConditionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PreviewAlertConditionResponse) Reset() {
	*x = PreviewAlertConditionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviewAlertConditionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewAlertConditionResponse) ProtoMessage() {}

func (x *PreviewAlertConditionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewAlertConditionResponse.ProtoReflect.Descriptor instead.
func (*PreviewAlertConditionResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{27}
}

type EndpointImplementation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Body  string `protobuf:"bytes,2,opt,name=Body,proto3" json:"Body,omitempty"`
}

func (x *EndpointImplementation) Reset() {
	*x = EndpointImplementation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointImplementation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointImplementation) ProtoMessage() {}

func (x *EndpointImplementation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointImplementation.ProtoReflect.Descriptor instead.
func (*EndpointImplementation) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{28}
}

func (x *EndpointImplementation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EndpointImplementation) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type CreateImplementation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointId     *v1.Reference           `protobuf:"bytes,1,opt,name=endpointId,proto3" json:"endpointId,omitempty"`
	ConditionId    *v1.Reference           `protobuf:"bytes,2,opt,name=conditionId,proto3" json:"conditionId,omitempty"`
	Implementation *EndpointImplementation `protobuf:"bytes,3,opt,name=implementation,proto3" json:"implementation,omitempty"`
}

func (x *CreateImplementation) Reset() {
	*x = CreateImplementation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImplementation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImplementation) ProtoMessage() {}

func (x *CreateImplementation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImplementation.ProtoReflect.Descriptor instead.
func (*CreateImplementation) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{29}
}

func (x *CreateImplementation) GetEndpointId() *v1.Reference {
	if x != nil {
		return x.EndpointId
	}
	return nil
}

func (x *CreateImplementation) GetConditionId() *v1.Reference {
	if x != nil {
		return x.ConditionId
	}
	return nil
}

func (x *CreateImplementation) GetImplementation() *EndpointImplementation {
	if x != nil {
		return x.Implementation
	}
	return nil
}

type AlertEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are assignable to Endpoint:
	//	*AlertEndpoint_Slack
	//	*AlertEndpoint_Email
	//	*AlertEndpoint_Msteams
	//	*AlertEndpoint_Webhook
	Endpoint isAlertEndpoint_Endpoint `protobuf_oneof:"endpoint"`
}

func (x *AlertEndpoint) Reset() {
	*x = AlertEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertEndpoint) ProtoMessage() {}

func (x *AlertEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertEndpoint.ProtoReflect.Descriptor instead.
func (*AlertEndpoint) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{30}
}

func (x *AlertEndpoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertEndpoint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (m *AlertEndpoint) GetEndpoint() isAlertEndpoint_Endpoint {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (x *AlertEndpoint) GetSlack() *SlackEndpoint {
	if x, ok := x.GetEndpoint().(*AlertEndpoint_Slack); ok {
		return x.Slack
	}
	return nil
}

func (x *AlertEndpoint) GetEmail() *EmailEndpoint {
	if x, ok := x.GetEndpoint().(*AlertEndpoint_Email); ok {
		return x.Email
	}
	return nil
}

func (x *AlertEndpoint) GetMsteams() *TeamsEndpoint {
	if x, ok := x.GetEndpoint().(*AlertEndpoint_Msteams); ok {
		return x.Msteams
	}
	return nil
}

func (x *AlertEndpoint) GetWebhook() *WebhookEndpoint {
	if x, ok := x.GetEndpoint().(*AlertEndpoint_Webhook); ok {
		return x.Webhook
	}
	return nil
}

type isAlertEndpoint_Endpoint interface {
	isAlertEndpoint_Endpoint()
}

type AlertEndpoint_Slack struct {
	Slack *SlackEndpoint `protobuf:"bytes,4,opt,name=slack,proto3,oneof"`
}

type AlertEndpoint_Email struct {
	Email *EmailEndpoint `protobuf:"bytes,5,opt,name=email,proto3,oneof"`
}

type AlertEndpoint_Msteams struct {
	Msteams *TeamsEndpoint `protobuf:"bytes,6,opt,name=msteams,proto3,oneof"`
}

type AlertEndpoint_Webhook struct {
	Webhook *WebhookEndpoint `protobuf:"bytes,7,opt,name=webhook,proto3,oneof"`
}

func (*AlertEndpoint_Slack) isAlertEndpoint_Endpoint() {}

func (*AlertEndpoint_Email) isAlertEndpoint_Endpoint() {}

func (*AlertEndpoint_Msteams) isAlertEndpoint_Endpoint() {}

func (*AlertEndpoint_Webhook) isAlertEndpoint_Endpoint() {}

type SlackEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookUrl string `protobuf:"bytes,1,opt,name=webhookUrl,proto3" json:"webhookUrl,omitempty"`
	Channel    string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *SlackEndpoint) Reset() {
	*x = SlackEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlackEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlackEndpoint) ProtoMessage() {}

func (x *SlackEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlackEndpoint.ProtoReflect.Descriptor instead.
func (*SlackEndpoint) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{31}
}

func (x *SlackEndpoint) GetWebhookUrl() string {
	if x != nil {
		return x.WebhookUrl
	}
	return ""
}

func (x *SlackEndpoint) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type EmailEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To   string  `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	From *string `protobuf:"bytes,2,opt,name=from,proto3,oneof" json:"from,omitempty"`
}

func (x *EmailEndpoint) Reset() {
	*x = EmailEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailEndpoint) ProtoMessage() {}

func (x *EmailEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailEndpoint.ProtoReflect.Descriptor instead.
func (*EmailEndpoint) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{32}
}

func (x *EmailEndpoint) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *EmailEndpoint) GetFrom() string {
	if x != nil && x.From != nil {
		return *x.From
	}
	return ""
}

type TeamsEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookUrl string `protobuf:"bytes,1,opt,name=webhookUrl,proto3" json:"webhookUrl,omitempty"`
}

func (x *TeamsEndpoint) Reset() {
	*x = TeamsEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamsEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsEndpoint) ProtoMessage() {}

func (x *TeamsEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsEndpoint.ProtoReflect.Descriptor instead.
func (*TeamsEndpoint) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{33}
}

func (x *TeamsEndpoint) GetWebhookUrl() string {
	if x != nil {
		return x.WebhookUrl
	}
	return ""
}

type WebhookEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *WebhookEndpoint) Reset() {
	*x = WebhookEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEndpoint) ProtoMessage() {}

func (x *WebhookEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEndpoint.ProtoReflect.Descriptor instead.
func (*WebhookEndpoint) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{34}
}

func (x *WebhookEndpoint) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type AlertEndpointList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AlertEndpointWithId `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AlertEndpointList) Reset() {
	*x = AlertEndpointList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertEndpointList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertEndpointList) ProtoMessage() {}

func (x *AlertEndpointList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertEndpointList.ProtoReflect.Descriptor instead.
func (*AlertEndpointList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{35}
}

func (x *AlertEndpointList) GetItems() []*AlertEndpointWithId {
	if x != nil {
		return x.Items
	}
	return nil
}

type AlertEndpointWithId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint *AlertEndpoint `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Id       *v1.Reference  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AlertEndpointWithId) Reset() {
	*x = AlertEndpointWithId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertEndpointWithId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertEndpointWithId) ProtoMessage() {}

func (x *AlertEndpointWithId) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertEndpointWithId.ProtoReflect.Descriptor instead.
func (*AlertEndpointWithId) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{36}
}

func (x *AlertEndpointWithId) GetEndpoint() *AlertEndpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *AlertEndpointWithId) GetId() *v1.Reference {
	if x != nil {
		return x.Id
	}
	return nil
}

type InformativeAlertLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition *AlertCondition `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	Log       *v1.AlertLog    `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *InformativeAlertLog) Reset() {
	*x = InformativeAlertLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InformativeAlertLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InformativeAlertLog) ProtoMessage() {}

func (x *InformativeAlertLog) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InformativeAlertLog.ProtoReflect.Descriptor instead.
func (*InformativeAlertLog) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{37}
}

func (x *InformativeAlertLog) GetCondition() *AlertCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *InformativeAlertLog) GetLog() *v1.AlertLog {
	if x != nil {
		return x.Log
	}
	return nil
}

type InformativeAlertLogList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*InformativeAlertLog `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *InformativeAlertLogList) Reset() {
	*x = InformativeAlertLogList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InformativeAlertLogList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InformativeAlertLogList) ProtoMessage() {}

func (x *InformativeAlertLogList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InformativeAlertLogList.ProtoReflect.Descriptor instead.
func (*InformativeAlertLogList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{38}
}

func (x *InformativeAlertLogList) GetItems() []*InformativeAlertLog {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListAlertEndpointsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAlertEndpointsRequest) Reset() {
	*x = ListAlertEndpointsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertEndpointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertEndpointsRequest) ProtoMessage() {}

func (x *ListAlertEndpointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertEndpointsRequest.ProtoReflect.Descriptor instead.
func (*ListAlertEndpointsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{39}
}

type UpdateAlertEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *v1.Reference  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdateAlert *AlertEndpoint `protobuf:"bytes,2,opt,name=UpdateAlert,proto3" json:"UpdateAlert,omitempty"`
}

func (x *UpdateAlertEndpointRequest) Reset() {
	*x = UpdateAlertEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertEndpointRequest) ProtoMessage() {}

func (x *UpdateAlertEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertEndpointRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertEndpointRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateAlertEndpointRequest) GetId() *v1.Reference {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateAlertEndpointRequest) GetUpdateAlert() *AlertEndpoint {
	if x != nil {
		return x.UpdateAlert
	}
	return nil
}

type TestAlertEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestAlertEndpointRequest) Reset() {
	*x = TestAlertEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestAlertEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAlertEndpointRequest) ProtoMessage() {}

func (x *TestAlertEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAlertEndpointRequest.ProtoReflect.Descriptor instead.
func (*TestAlertEndpointRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{41}
}

type TestAlertEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestAlertEndpointResponse) Reset() {
	*x = TestAlertEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestAlertEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAlertEndpointResponse) ProtoMessage() {}

func (x *TestAlertEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAlertEndpointResponse.ProtoReflect.Descriptor instead.
func (*TestAlertEndpointResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{42}
}

type SilenceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SilenceId string                 `protobuf:"bytes,1,opt,name=silenceId,proto3" json:"silenceId,omitempty"`
	StartsAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=startsAt,proto3" json:"startsAt,omitempty"`
	EndsAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=endsAt,proto3" json:"endsAt,omitempty"`
}

func (x *SilenceInfo) Reset() {
	*x = SilenceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SilenceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SilenceInfo) ProtoMessage() {}

func (x *SilenceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SilenceInfo.ProtoReflect.Descriptor instead.
func (*SilenceInfo) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP(), []int{43}
}

func (x *SilenceInfo) GetSilenceId() string {
	if x != nil {
		return x.SilenceId
	}
	return ""
}

func (x *SilenceInfo) GetStartsAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartsAt
	}
	return nil
}

func (x *SilenceInfo) GetEndsAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndsAt
	}
	return nil
}

var File_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto protoreflect.FileDescriptor

var file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70,
	0x6e, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a,
	0x0a, 0x0e, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x14, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc7,
	0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3e, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x59, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x30, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x22, 0xd1, 0x02, 0x0a, 0x0e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x09, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x0e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x07,
	0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x73, 0x69, 0x6c,
	0x65, 0x6e, 0x63, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x0b, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x46, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x46, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x09, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x72, 0x65, 0x65, 0x12,
	0x22, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6f, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x72, 0x65,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x48, 0x00, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x72, 0x65,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x42, 0x0a, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x64, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x45, 0x0a, 0x19, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x49, 0x0a, 0x1a, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x22, 0x85, 0x02, 0x0a, 0x10, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x2f, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x38, 0x0a, 0x09, 0x6b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x09, 0x6b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x99, 0x02, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x3c, 0x0a, 0x09, 0x6b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x6b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42,
	0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f,
	0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x16,
	0x0a, 0x14, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x22, 0x74, 0x0a, 0x17, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x66,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x03, 0x66, 0x6f, 0x72, 0x22, 0x7e, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x75,
	0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x66, 0x6f, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x66, 0x6f, 0x72, 0x73, 0x22, 0x3f, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x28, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x12, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x59, 0x0a, 0x19,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x01, 0x78, 0x12, 0x1d, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x01, 0x79, 0x22, 0x5d, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x01, 0x78, 0x12, 0x1d, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x01, 0x79, 0x22, 0x86, 0x01, 0x0a, 0x19, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x46, 0x6c, 0x6f, 0x77, 0x12, 0x1d, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x01, 0x78, 0x12, 0x1d, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x01, 0x79, 0x12, 0x2b, 0x0a, 0x03, 0x66, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x66, 0x6f, 0x72, 0x22,
	0x8c, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f,
	0x77, 0x12, 0x1d, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x01, 0x78,
	0x12, 0x1d, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x01, 0x79, 0x12,
	0x2d, 0x0a, 0x04, 0x66, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x66, 0x6f, 0x72, 0x73, 0x22, 0x70,
	0x0a, 0x14, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x71, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x22, 0x1e, 0x0a, 0x1c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x1f, 0x0a, 0x1d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x42, 0x0a, 0x16, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6d, 0x70,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0xbb, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f,
	0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x31, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xfb, 0x01, 0x0a, 0x0d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x73,
	0x6c, 0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x6c, 0x61,
	0x63, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x73, 0x6c,
	0x61, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x07, 0x6d,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54,
	0x65, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x42, 0x0a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x22, 0x49, 0x0a, 0x0d, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55,
	0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x41, 0x0a, 0x0d,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x17, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x22,
	0x2f, 0x0a, 0x0d, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c,
	0x22, 0x23, 0x0a, 0x0f, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x3f, 0x0a, 0x11, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x62, 0x0a, 0x13, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x02, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x13, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f,
	0x67, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c,
	0x6f, 0x67, 0x22, 0x45, 0x0a, 0x17, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c,
	0x6f, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x54, 0x65, 0x73, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x54, 0x65, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x97, 0x01, 0x0a, 0x0b, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x36,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x73, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x73, 0x41, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x73, 0x41, 0x74, 0x2a, 0x3a, 0x0a, 0x08, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x49, 0x54,
	0x49, 0x43, 0x41, 0x4c, 0x10, 0x03, 0x2a, 0x4a, 0x0a, 0x09, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x4b, 0x55, 0x42, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x46, 0x4c, 0x4f, 0x57,
	0x10, 0x03, 0x2a, 0x24, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x44, 0x10, 0x00,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x52, 0x10, 0x01, 0x2a, 0x31, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a,
	0x07, 0x49, 0x46, 0x5f, 0x54, 0x48, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x46,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x54, 0x48, 0x45, 0x4e, 0x10, 0x01, 0x32, 0xd1, 0x12, 0x0a, 0x08,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x5a, 0x0a, 0x0d, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x15, 0x2e, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14,
	0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x16,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x22, 0x0b, 0x2f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x12, 0x4b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x0e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13,
	0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x57, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x4c, 0x6f, 0x67, 0x73, 0x12, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x5b, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x16,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x19,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x1a, 0x0e, 0x2f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x51, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0f, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x2a, 0x0e, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x57, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01,
	0x2a, 0x22, 0x12, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x0f, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x62, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x6b, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x1a, 0x12, 0x2f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x76,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1e, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x7d, 0x12, 0x5b, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a,
	0x12, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x7d, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x57, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0f, 0x2e, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2f, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x11, 0x44,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x2a, 0x15, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x73, 0x69, 0x6c, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x0e, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a,
	0x01, 0x2a, 0x22, 0x11, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x0e, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5f, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x1a, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x68, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a,
	0x01, 0x2a, 0x1a, 0x11, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x5e, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6d, 0x0a, 0x11, 0x54, 0x65, 0x73, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x12, 0x7a, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x70,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20,
	0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x2f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x7a, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x1a, 0x20, 0x2f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x71, 0x0a, 0x1c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6d,
	0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x2a, 0x20, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x2f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescOnce sync.Once
	file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescData = file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDesc
)

func file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescGZIP() []byte {
	file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescOnce.Do(func() {
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescData)
	})
	return file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDescData
}

var file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_goTypes = []interface{}{
	(Severity)(0),                         // 0: Severity
	(AlertType)(0),                        // 1: AlertType
	(CompositionAction)(0),                // 2: CompositionAction
	(ControlFlowAction)(0),                // 3: ControlFlowAction
	(*SilenceRequest)(nil),                // 4: SilenceRequest
	(*TriggerAlertsRequest)(nil),          // 5: TriggerAlertsRequest
	(*TriggerAlertsResponse)(nil),         // 6: TriggerAlertsResponse
	(*ListAlertLogRequest)(nil),           // 7: ListAlertLogRequest
	(*UpdateAlertLogRequest)(nil),         // 8: UpdateAlertLogRequest
	(*AlertCondition)(nil),                // 9: AlertCondition
	(*AlertForest)(nil),                   // 10: AlertForest
	(*AlertTree)(nil),                     // 11: AlertTree
	(*AlertTreeNode)(nil),                 // 12: AlertTreeNode
	(*AlertDetailChoicesRequest)(nil),     // 13: AlertDetailChoicesRequest
	(*AlertDetailChoicesResponse)(nil),    // 14: AlertDetailChoicesResponse
	(*AlertTypeDetails)(nil),              // 15: AlertTypeDetails
	(*ListAlertTypeDetails)(nil),          // 16: ListAlertTypeDetails
	(*AlertConditionSystem)(nil),          // 17: AlertConditionSystem
	(*ListAlertConditionSystem)(nil),      // 18: ListAlertConditionSystem
	(*AlertConditionKubeState)(nil),       // 19: AlertConditionKubeState
	(*ListAlertConditionKubeState)(nil),   // 20: ListAlertConditionKubeState
	(*ListSelectAlertInfo)(nil),           // 21: ListSelectAlertInfo
	(*AlertConditionList)(nil),            // 22: AlertConditionList
	(*AlertConditionComposition)(nil),     // 23: AlertConditionComposition
	(*ListAlertConditionComposition)(nil), // 24: ListAlertConditionComposition
	(*AlertConditionControlFlow)(nil),     // 25: AlertConditionControlFlow
	(*ListAlertConditionControlFlow)(nil), // 26: ListAlertConditionControlFlow
	(*AlertConditionWithId)(nil),          // 27: AlertConditionWithId
	(*ListAlertConditionRequest)(nil),     // 28: ListAlertConditionRequest
	(*UpdateAlertConditionRequest)(nil),   // 29: UpdateAlertConditionRequest
	(*PreviewAlertConditionRequest)(nil),  // 30: PreviewAlertConditionRequest
	(*PreviewAlertConditionResponse)(nil), // 31: PreviewAlertConditionResponse
	(*EndpointImplementation)(nil),        // 32: EndpointImplementation
	(*CreateImplementation)(nil),          // 33: CreateImplementation
	(*AlertEndpoint)(nil),                 // 34: AlertEndpoint
	(*SlackEndpoint)(nil),                 // 35: SlackEndpoint
	(*EmailEndpoint)(nil),                 // 36: EmailEndpoint
	(*TeamsEndpoint)(nil),                 // 37: TeamsEndpoint
	(*WebhookEndpoint)(nil),               // 38: WebhookEndpoint
	(*AlertEndpointList)(nil),             // 39: AlertEndpointList
	(*AlertEndpointWithId)(nil),           // 40: AlertEndpointWithId
	(*InformativeAlertLog)(nil),           // 41: InformativeAlertLog
	(*InformativeAlertLogList)(nil),       // 42: InformativeAlertLogList
	(*ListAlertEndpointsRequest)(nil),     // 43: ListAlertEndpointsRequest
	(*UpdateAlertEndpointRequest)(nil),    // 44: UpdateAlertEndpointRequest
	(*TestAlertEndpointRequest)(nil),      // 45: TestAlertEndpointRequest
	(*TestAlertEndpointResponse)(nil),     // 46: TestAlertEndpointResponse
	(*SilenceInfo)(nil),                   // 47: SilenceInfo
	(*v1.Reference)(nil),                  // 48: core.Reference
	(*durationpb.Duration)(nil),           // 49: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),         // 50: google.protobuf.Timestamp
	(*v1.AlertLog)(nil),                   // 51: core.AlertLog
	(*emptypb.Empty)(nil),                 // 52: google.protobuf.Empty
}
var file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_depIdxs = []int32{
	48, // 0: SilenceRequest.conditionId:type_name -> core.Reference
	49, // 1: SilenceRequest.duration:type_name -> google.protobuf.Duration
	48, // 2: TriggerAlertsRequest.conditionId:type_name -> core.Reference
	50, // 3: ListAlertLogRequest.startTimestamp:type_name -> google.protobuf.Timestamp
	50, // 4: ListAlertLogRequest.endTimestamp:type_name -> google.protobuf.Timestamp
	51, // 5: UpdateAlertLogRequest.UpdateAlert:type_name -> core.AlertLog
	0,  // 6: AlertCondition.severity:type_name -> Severity
	15, // 7: AlertCondition.alertType:type_name -> AlertTypeDetails
	32, // 8: AlertCondition.details:type_name -> EndpointImplementation
	47, // 9: AlertCondition.silence:type_name -> SilenceInfo
	3,  // 10: AlertForest.action:type_name -> ControlFlowAction
	12, // 11: AlertTree.root:type_name -> AlertTreeNode
	27, // 12: AlertTreeNode.item:type_name -> AlertConditionWithId
	12, // 13: AlertTreeNode.left:type_name -> AlertTreeNode
	12, // 14: AlertTreeNode.right:type_name -> AlertTreeNode
	1,  // 15: AlertDetailChoicesRequest.alertType:type_name -> AlertType
	15, // 16: AlertDetailChoicesResponse.choices:type_name -> AlertTypeDetails
	17, // 17: AlertTypeDetails.system:type_name -> AlertConditionSystem
	19, // 18: AlertTypeDetails.kubeState:type_name -> AlertConditionKubeState
	23, // 19: AlertTypeDetails.composition:type_name -> AlertConditionComposition
	25, // 20: AlertTypeDetails.controlFlow:type_name -> AlertConditionControlFlow
	18, // 21: ListAlertTypeDetails.system:type_name -> ListAlertConditionSystem
	20, // 22: ListAlertTypeDetails.kubeState:type_name -> ListAlertConditionKubeState
	24, // 23: ListAlertTypeDetails.composition:type_name -> ListAlertConditionComposition
	26, // 24: ListAlertTypeDetails.controlFlow:type_name -> ListAlertConditionControlFlow
	49, // 25: AlertConditionKubeState.for:type_name -> google.protobuf.Duration
	49, // 26: ListAlertConditionKubeState.fors:type_name -> google.protobuf.Duration
	1,  // 27: ListSelectAlertInfo.alertType:type_name -> AlertType
	27, // 28: AlertConditionList.items:type_name -> AlertConditionWithId
	48, // 29: AlertConditionComposition.x:type_name -> core.Reference
	48, // 30: AlertConditionComposition.y:type_name -> core.Reference
	48, // 31: ListAlertConditionComposition.x:type_name -> core.Reference
	48, // 32: ListAlertConditionComposition.y:type_name -> core.Reference
	48, // 33: AlertConditionControlFlow.x:type_name -> core.Reference
	48, // 34: AlertConditionControlFlow.y:type_name -> core.Reference
	49, // 35: AlertConditionControlFlow.for:type_name -> google.protobuf.Duration
	48, // 36: ListAlertConditionControlFlow.x:type_name -> core.Reference
	48, // 37: ListAlertConditionControlFlow.y:type_name -> core.Reference
	49, // 38: ListAlertConditionControlFlow.fors:type_name -> google.protobuf.Duration
	48, // 39: AlertConditionWithId.id:type_name -> core.Reference
	9,  // 40: AlertConditionWithId.alertCondition:type_name -> AlertCondition
	48, // 41: UpdateAlertConditionRequest.id:type_name -> core.Reference
	9,  // 42: UpdateAlertConditionRequest.updateAlert:type_name -> AlertCondition
	48, // 43: CreateImplementation.endpointId:type_name -> core.Reference
	48, // 44: CreateImplementation.conditionId:type_name -> core.Reference
	32, // 45: CreateImplementation.implementation:type_name -> EndpointImplementation
	35, // 46: AlertEndpoint.slack:type_name -> SlackEndpoint
	36, // 47: AlertEndpoint.email:type_name -> EmailEndpoint
	37, // 48: AlertEndpoint.msteams:type_name -> TeamsEndpoint
	38, // 49: AlertEndpoint.webhook:type_name -> WebhookEndpoint
	40, // 50: AlertEndpointList.items:type_name -> AlertEndpointWithId
	34, // 51: AlertEndpointWithId.endpoint:type_name -> AlertEndpoint
	48, // 52: AlertEndpointWithId.id:type_name -> core.Reference
	9,  // 53: InformativeAlertLog.condition:type_name -> AlertCondition
	51, // 54: InformativeAlertLog.log:type_name -> core.AlertLog
	41, // 55: InformativeAlertLogList.items:type_name -> InformativeAlertLog
	48, // 56: UpdateAlertEndpointRequest.id:type_name -> core.Reference
	34, // 57: UpdateAlertEndpointRequest.UpdateAlert:type_name -> AlertEndpoint
	50, // 58: SilenceInfo.startsAt:type_name -> google.protobuf.Timestamp
	50, // 59: SilenceInfo.endsAt:type_name -> google.protobuf.Timestamp
	5,  // 60: Alerting.TriggerAlerts:input_type -> TriggerAlertsRequest
	51, // 61: Alerting.CreateAlertLog:input_type -> core.AlertLog
	48, // 62: Alerting.GetAlertLog:input_type -> core.Reference
	7,  // 63: Alerting.ListAlertLogs:input_type -> ListAlertLogRequest
	8,  // 64: Alerting.UpdateAlertLog:input_type -> UpdateAlertLogRequest
	48, // 65: Alerting.DeleteAlertLog:input_type -> core.Reference
	9,  // 66: Alerting.CreateAlertCondition:input_type -> AlertCondition
	48, // 67: Alerting.GetAlertCondition:input_type -> core.Reference
	28, // 68: Alerting.ListAlertConditions:input_type -> ListAlertConditionRequest
	29, // 69: Alerting.UpdateAlertCondition:input_type -> UpdateAlertConditionRequest
	13, // 70: Alerting.ListAlertConditionChoices:input_type -> AlertDetailChoicesRequest
	48, // 71: Alerting.DeleteAlertCondition:input_type -> core.Reference
	30, // 72: Alerting.PreviewAlertCondition:input_type -> PreviewAlertConditionRequest
	4,  // 73: Alerting.ActivateSilence:input_type -> SilenceRequest
	48, // 74: Alerting.DeactivateSilence:input_type -> core.Reference
	34, // 75: Alerting.CreateAlertEndpoint:input_type -> AlertEndpoint
	48, // 76: Alerting.GetAlertEndpoint:input_type -> core.Reference
	43, // 77: Alerting.ListAlertEndpoints:input_type -> ListAlertEndpointsRequest
	44, // 78: Alerting.UpdateAlertEndpoint:input_type -> UpdateAlertEndpointRequest
	48, // 79: Alerting.DeleteAlertEndpoint:input_type -> core.Reference
	45, // 80: Alerting.TestAlertEndpoint:input_type -> TestAlertEndpointRequest
	33, // 81: Alerting.CreateEndpointImplementation:input_type -> CreateImplementation
	33, // 82: Alerting.UpdateEndpointImplementation:input_type -> CreateImplementation
	48, // 83: Alerting.DeleteEndpointImplementation:input_type -> core.Reference
	6,  // 84: Alerting.TriggerAlerts:output_type -> TriggerAlertsResponse
	52, // 85: Alerting.CreateAlertLog:output_type -> google.protobuf.Empty
	51, // 86: Alerting.GetAlertLog:output_type -> core.AlertLog
	42, // 87: Alerting.ListAlertLogs:output_type -> InformativeAlertLogList
	52, // 88: Alerting.UpdateAlertLog:output_type -> google.protobuf.Empty
	52, // 89: Alerting.DeleteAlertLog:output_type -> google.protobuf.Empty
	48, // 90: Alerting.CreateAlertCondition:output_type -> core.Reference
	9,  // 91: Alerting.GetAlertCondition:output_type -> AlertCondition
	22, // 92: Alerting.ListAlertConditions:output_type -> AlertConditionList
	52, // 93: Alerting.UpdateAlertCondition:output_type -> google.protobuf.Empty
	16, // 94: Alerting.ListAlertConditionChoices:output_type -> ListAlertTypeDetails
	52, // 95: Alerting.DeleteAlertCondition:output_type -> google.protobuf.Empty
	31, // 96: Alerting.PreviewAlertCondition:output_type -> PreviewAlertConditionResponse
	52, // 97: Alerting.ActivateSilence:output_type -> google.protobuf.Empty
	52, // 98: Alerting.DeactivateSilence:output_type -> google.protobuf.Empty
	52, // 99: Alerting.CreateAlertEndpoint:output_type -> google.protobuf.Empty
	34, // 100: Alerting.GetAlertEndpoint:output_type -> AlertEndpoint
	39, // 101: Alerting.ListAlertEndpoints:output_type -> AlertEndpointList
	52, // 102: Alerting.UpdateAlertEndpoint:output_type -> google.protobuf.Empty
	52, // 103: Alerting.DeleteAlertEndpoint:output_type -> google.protobuf.Empty
	46, // 104: Alerting.TestAlertEndpoint:output_type -> TestAlertEndpointResponse
	52, // 105: Alerting.CreateEndpointImplementation:output_type -> google.protobuf.Empty
	52, // 106: Alerting.UpdateEndpointImplementation:output_type -> google.protobuf.Empty
	52, // 107: Alerting.DeleteEndpointImplementation:output_type -> google.protobuf.Empty
	84, // [84:108] is the sub-list for method output_type
	60, // [60:84] is the sub-list for method input_type
	60, // [60:60] is the sub-list for extension type_name
	60, // [60:60] is the sub-list for extension extendee
	0,  // [0:60] is the sub-list for field type_name
}

func init() { file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_init() }
func file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_init() {
	if File_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SilenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertForest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertTreeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertDetailChoicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertDetailChoicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertTypeDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertTypeDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionKubeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionKubeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSelectAlertInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionComposition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionComposition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionControlFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionControlFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionWithId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviewAlertConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviewAlertConditionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointImplementation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImplementation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlackEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamsEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertEndpointList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertEndpointWithId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InformativeAlertLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InformativeAlertLogList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertEndpointsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestAlertEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestAlertEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SilenceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*AlertTreeNode_Item)(nil),
	}
	file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*AlertTypeDetails_System)(nil),
		(*AlertTypeDetails_KubeState)(nil),
		(*AlertTypeDetails_Composition)(nil),
		(*AlertTypeDetails_ControlFlow)(nil),
	}
	file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*ListAlertTypeDetails_System)(nil),
		(*ListAlertTypeDetails_KubeState)(nil),
		(*ListAlertTypeDetails_Composition)(nil),
		(*ListAlertTypeDetails_ControlFlow)(nil),
	}
	file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*AlertEndpoint_Slack)(nil),
		(*AlertEndpoint_Email)(nil),
		(*AlertEndpoint_Msteams)(nil),
		(*AlertEndpoint_Webhook)(nil),
	}
	file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes[32].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_goTypes,
		DependencyIndexes: file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_depIdxs,
		EnumInfos:         file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_enumTypes,
		MessageInfos:      file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_msgTypes,
	}.Build()
	File_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto = out.File
	file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_rawDesc = nil
	file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_goTypes = nil
	file_github_com_rancher_opni_pkg_alerting_v1alpha_alerting_proto_depIdxs = nil
}

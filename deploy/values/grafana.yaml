enabled: true
image:
  repository: docker.io/grafana/grafana
  tag: main
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Opni
        type: prometheus
        access: proxy
        url: https://opni-monitoring.opni-monitoring.svc:8080/api/prom
        withCredentials: true
        editable: false
        isDefault: true
        jsonData:
          alertmanagerUid: opni_alertmanager
          tlsAuthWithCACert: true
          oauthPassThru: true
        secureJsonData:
          tlsCACert: "$__file{/run/opni-monitoring/certs/ca.crt}"
      - name: Opni Alertmanager
        uid: opni_alertmanager
        type: alertmanager
        access: proxy
        url: https://opni-monitoring.opni-monitoring.svc:8080/api/prom
        withCredentials: true
        editable: false
        jsonData:
          implementation: cortex
          tlsAuthWithCACert: true
          oauthPassThru: true
        secureJsonData:
          tlsCACert: "$__file{/run/opni-monitoring/certs/ca.crt}"
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: "opni-monitoring"
        orgId: 1
        folder: ""
        type: file
        disableDeletion: true
        editable: false
        options:
          path: /var/lib/grafana/dashboards/opni-monitoring
grafana.ini:
  server:
    domain: "grafana.localhost"
    root_url: "grafana.localhost"
  auth.generic_oauth:
    enabled: true
    scopes: "openid profile email"
  auth:
    disable_login_form: true
  auth.proxy:
    enabled: true
  auth.basic:
    enabled: false
  unified_alerting:
    enabled: true
  alerting:
    enabled: false
extraSecretMounts:
  - name: opni-cacert
    mountPath: /run/opni-monitoring/certs
    readOnly: true
    projected:
      sources:
        - secret:
            name: opni-gateway-serving-cert
            items:
              - key: ca.crt
                path: ca.crt
dashboardsConfigMaps:
  opni-monitoring: opni-monitoring-dashboards
tls:
  - secretName: grafana-tls-keys
    hosts:
      - "grafana.localhost"
persistence:
  enabled: true
ingress:
  enabled: true
  hosts:
    - "grafana.localhost"
